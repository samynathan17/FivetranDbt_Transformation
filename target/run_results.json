{"logs": [], "results": [{"node": {"raw_sql": "{% if not var(\"enable_salesforce_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{% if var(\"stg_salesforce_crm_etl\") == 'fivetran' %}\r\n    WITH source AS (\r\n\r\n    select * from {{ var('stg_salesforce_schema') }}.{{ var('stg_salesforce_account_table') }} \r\n\r\n    ),renamed as (\r\n      select\r\n      \r\n        id as account_id,\r\n        name as account_name,\r\n        -- keys\r\n        parent_id,\r\n        owner_id as account_owner_id,\r\n\r\n        -- logistics\r\n        type as account_type,\r\n        billing_street as company_street,\r\n        billing_city as company_city,\r\n        billing_state as company_state,\r\n        billing_country as company_country,\r\n        billing_postal_code as company_zipcode,\r\n\r\n        -- Shipping details\r\n        shipping_street,\r\n        shipping_city,\r\n        shipping_state,\r\n        shipping_country,\r\n        shipping_postal_code as shipping_zipcode,\r\n        account_number,\r\n        -- details\r\n        industry,\r\n        description,\r\n        number_of_employees as number_of_employees,\r\n        annual_revenue,\r\n        ownership,\r\n\r\n        -- metadata\r\n        last_activity_date,\r\n        created_date as created_at,\r\n        last_modified_date as updated_at,\r\n        clean_status,\r\n        account_source,\r\n        customer_priority_c as customer_priority,\r\n        IS_DELETED\r\n\r\n      from source\r\n    )\r\n{% elif var(\"stg_sles_crm_etl\") == 'stitch' %}\r\n    WITH source AS (\r\n      select * from {{ var('stg_salesforce_schema') }}.{{ var('stg_salesforce_projectsaccount_table') }} where not is_deleted\r\n    ),renamed as (\r\n      select\r\n      \r\n        id as account_id,\r\n        name as account_name,\r\n        -- keys\r\n        parent_id,\r\n        owner_id \r\n        from source\r\n       )\r\n\r\n{% endif %}\r\n\r\nselect * from renamed", "compiled": true, "database": "FIVETRAN_DATABASE", "schema": "dbt_dataflo_staging", "fqn": ["FivetranDbt_Transformation", "sources", "stg_salesforce", "stg_sf_account"], "unique_id": "model.FivetranDbt_Transformation.stg_sf_account", "package_name": "FivetranDbt_Transformation", "root_path": "/usr/src/develop/user-10139/environment-12915/repository-10542", "path": "sources/stg_salesforce/stg_sf_account.sql", "original_file_path": "models/sources/stg_salesforce/stg_sf_account.sql", "name": "stg_sf_account", "resource_type": "model", "alias": "stg_sf_account", "checksum": {"name": "sha256", "checksum": "438c75b2360105e159d1d4cf8ef54c0dfc5062f3612f4a28e63d071bcaedde5a"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {"account_id": {"name": "account_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/sources/stg_salesforce/schema.yml", "build_path": "target/run/FivetranDbt_Transformation/models/sources/stg_salesforce/stg_sf_account.sql", "deferred": false, "compiled_sql": "\n\n\n    WITH source AS (\n\n    select * from salesforce.account \n\n    ),renamed as (\n      select\n      \n        id as account_id,\n        name as account_name,\n        -- keys\n        parent_id,\n        owner_id as account_owner_id,\n\n        -- logistics\n        type as account_type,\n        billing_street as company_street,\n        billing_city as company_city,\n        billing_state as company_state,\n        billing_country as company_country,\n        billing_postal_code as company_zipcode,\n\n        -- Shipping details\n        shipping_street,\n        shipping_city,\n        shipping_state,\n        shipping_country,\n        shipping_postal_code as shipping_zipcode,\n        account_number,\n        -- details\n        industry,\n        description,\n        number_of_employees as number_of_employees,\n        annual_revenue,\n        ownership,\n\n        -- metadata\n        last_activity_date,\n        created_date as created_at,\n        last_modified_date as updated_at,\n        clean_status,\n        account_source,\n        customer_priority_c as customer_priority,\n        IS_DELETED\n\n      from source\n    )\n\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n    WITH source AS (\n\n    select * from salesforce.account \n\n    ),renamed as (\n      select\n      \n        id as account_id,\n        name as account_name,\n        -- keys\n        parent_id,\n        owner_id as account_owner_id,\n\n        -- logistics\n        type as account_type,\n        billing_street as company_street,\n        billing_city as company_city,\n        billing_state as company_state,\n        billing_country as company_country,\n        billing_postal_code as company_zipcode,\n\n        -- Shipping details\n        shipping_street,\n        shipping_city,\n        shipping_state,\n        shipping_country,\n        shipping_postal_code as shipping_zipcode,\n        account_number,\n        -- details\n        industry,\n        description,\n        number_of_employees as number_of_employees,\n        annual_revenue,\n        ownership,\n\n        -- metadata\n        last_activity_date,\n        created_date as created_at,\n        last_modified_date as updated_at,\n        clean_status,\n        account_source,\n        customer_priority_c as customer_priority,\n        IS_DELETED\n\n      from source\n    )\n\n\nselect * from renamed"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.7758166790008545, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T11:15:54.430041Z", "completed_at": "2020-11-06T11:15:54.474323Z"}, {"name": "execute", "started_at": "2020-11-06T11:15:54.474872Z", "completed_at": "2020-11-06T11:15:55.131583Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_salesforce_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\n{% if var(\"stg_salesforce_crm_etl\") == 'fivetran' %}\r\n    WITH source AS (\r\n\r\n    select * from {{ var('stg_salesforce_schema') }}.{{ var('stg_salesforce_opportunity_table') }}\r\n\r\n    ),renamed as (\r\n    select\r\n      id as opportunity_id,\r\n\r\n        -- keys\r\n        account_id as opportunity_account_id,\r\n        owner_id as opportunity_owner_id,\r\n\r\n        -- company context\r\n        name as company_name,\r\n        description as opportunity_description,\r\n        type as opportunity_type,\r\n\r\n        -- attribution\r\n        lead_source,\r\n        is_private,\r\n\r\n        -- pipeline\r\n        fiscal as fiscal_yq,\r\n        fiscal_year,\r\n        fiscal_quarter,\r\n        probability,\r\n        next_step,\r\n        has_open_activity,\r\n        stage_name,\r\n        forecast_category,\r\n        forecast_category_name,\r\n        campaign_id,\r\n        is_won,\r\n        is_closed,\r\n        close_date,\r\n        has_overdue_task,\r\n        expected_revenue,\r\n        total_opportunity_quantity,\r\n\r\n        delivery_installation_status_c as delivery_installation_status,\r\n        order_number_c as order_number,\r\n        current_generators_c as current_generators,\r\n        main_competitors_c as main_competitors,\r\n\r\n        -- accounting\r\n        amount,\r\n\r\n        -- metadata\r\n        last_activity_date,\r\n        created_date as created_at,\r\n        last_modified_date as updated_at,\r\n        IS_DELETED,\r\n        month(created_date) as created_month,\r\n        month(close_date) as closed_month,\r\n        created_date >= {{ dbt_utils.date_trunc('month', dbt_utils.current_timestamp()) }} as is_created_this_month,\r\n        created_date >= {{ dbt_utils.date_trunc('quarter', dbt_utils.current_timestamp()) }} as is_created_this_quarter,\r\n        {{ dbt_utils.datediff(dbt_utils.current_timestamp(), 'created_date', 'day') }} as days_since_created,\r\n        {{ dbt_utils.datediff('close_date', 'created_date', 'day') }} as days_to_close,\r\n        {{ dbt_utils.date_trunc('month', 'close_date') }} = {{ dbt_utils.date_trunc('month', dbt_utils.current_timestamp()) }} as is_closed_this_month,\r\n        {{ dbt_utils.date_trunc('quarter', 'close_date') }} = {{ dbt_utils.date_trunc('quarter', dbt_utils.current_timestamp()) }} as is_closed_this_quarter\r\n\r\n\r\n    from source\r\n)\r\n{% endif %}\r\n\r\nselect * from renamed", "compiled": true, "database": "FIVETRAN_DATABASE", "schema": "dbt_dataflo_staging", "fqn": ["FivetranDbt_Transformation", "sources", "stg_salesforce", "stg_sf_opportunity"], "unique_id": "model.FivetranDbt_Transformation.stg_sf_opportunity", "package_name": "FivetranDbt_Transformation", "root_path": "/usr/src/develop/user-10139/environment-12915/repository-10542", "path": "sources/stg_salesforce/stg_sf_opportunity.sql", "original_file_path": "models/sources/stg_salesforce/stg_sf_opportunity.sql", "name": "stg_sf_opportunity", "resource_type": "model", "alias": "stg_sf_opportunity", "checksum": {"name": "sha256", "checksum": "e618f3214361f6d9f9cc797cf37a8227699cd721bc353e7ee54b375d9c803f01"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_utils.date_trunc", "macro.dbt_utils.datediff", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {"opportunity_id": {"name": "opportunity_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/sources/stg_salesforce/schema.yml", "build_path": "target/run/FivetranDbt_Transformation/models/sources/stg_salesforce/stg_sf_opportunity.sql", "deferred": false, "compiled_sql": "\n\n\n\n    WITH source AS (\n\n    select * from salesforce.opportunity\n\n    ),renamed as (\n    select\n      id as opportunity_id,\n\n        -- keys\n        account_id as opportunity_account_id,\n        owner_id as opportunity_owner_id,\n\n        -- company context\n        name as company_name,\n        description as opportunity_description,\n        type as opportunity_type,\n\n        -- attribution\n        lead_source,\n        is_private,\n\n        -- pipeline\n        fiscal as fiscal_yq,\n        fiscal_year,\n        fiscal_quarter,\n        probability,\n        next_step,\n        has_open_activity,\n        stage_name,\n        forecast_category,\n        forecast_category_name,\n        campaign_id,\n        is_won,\n        is_closed,\n        close_date,\n        has_overdue_task,\n        expected_revenue,\n        total_opportunity_quantity,\n\n        delivery_installation_status_c as delivery_installation_status,\n        order_number_c as order_number,\n        current_generators_c as current_generators,\n        main_competitors_c as main_competitors,\n\n        -- accounting\n        amount,\n\n        -- metadata\n        last_activity_date,\n        created_date as created_at,\n        last_modified_date as updated_at,\n        IS_DELETED,\n        month(created_date) as created_month,\n        month(close_date) as closed_month,\n        created_date >= \n    date_trunc('month', \n    current_timestamp::\n    timestamp_ntz\n\n)\n as is_created_this_month,\n        created_date >= \n    date_trunc('quarter', \n    current_timestamp::\n    timestamp_ntz\n\n)\n as is_created_this_quarter,\n        \n  \n\n    datediff(\n        day,\n        \n    current_timestamp::\n    timestamp_ntz\n\n,\n        created_date\n        )\n\n\n as days_since_created,\n        \n  \n\n    datediff(\n        day,\n        close_date,\n        created_date\n        )\n\n\n as days_to_close,\n        \n    date_trunc('month', close_date)\n = \n    date_trunc('month', \n    current_timestamp::\n    timestamp_ntz\n\n)\n as is_closed_this_month,\n        \n    date_trunc('quarter', close_date)\n = \n    date_trunc('quarter', \n    current_timestamp::\n    timestamp_ntz\n\n)\n as is_closed_this_quarter\n\n\n    from source\n)\n\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n    WITH source AS (\n\n    select * from salesforce.opportunity\n\n    ),renamed as (\n    select\n      id as opportunity_id,\n\n        -- keys\n        account_id as opportunity_account_id,\n        owner_id as opportunity_owner_id,\n\n        -- company context\n        name as company_name,\n        description as opportunity_description,\n        type as opportunity_type,\n\n        -- attribution\n        lead_source,\n        is_private,\n\n        -- pipeline\n        fiscal as fiscal_yq,\n        fiscal_year,\n        fiscal_quarter,\n        probability,\n        next_step,\n        has_open_activity,\n        stage_name,\n        forecast_category,\n        forecast_category_name,\n        campaign_id,\n        is_won,\n        is_closed,\n        close_date,\n        has_overdue_task,\n        expected_revenue,\n        total_opportunity_quantity,\n\n        delivery_installation_status_c as delivery_installation_status,\n        order_number_c as order_number,\n        current_generators_c as current_generators,\n        main_competitors_c as main_competitors,\n\n        -- accounting\n        amount,\n\n        -- metadata\n        last_activity_date,\n        created_date as created_at,\n        last_modified_date as updated_at,\n        IS_DELETED,\n        month(created_date) as created_month,\n        month(close_date) as closed_month,\n        created_date >= \n    date_trunc('month', \n    current_timestamp::\n    timestamp_ntz\n\n)\n as is_created_this_month,\n        created_date >= \n    date_trunc('quarter', \n    current_timestamp::\n    timestamp_ntz\n\n)\n as is_created_this_quarter,\n        \n  \n\n    datediff(\n        day,\n        \n    current_timestamp::\n    timestamp_ntz\n\n,\n        created_date\n        )\n\n\n as days_since_created,\n        \n  \n\n    datediff(\n        day,\n        close_date,\n        created_date\n        )\n\n\n as days_to_close,\n        \n    date_trunc('month', close_date)\n = \n    date_trunc('month', \n    current_timestamp::\n    timestamp_ntz\n\n)\n as is_closed_this_month,\n        \n    date_trunc('quarter', close_date)\n = \n    date_trunc('quarter', \n    current_timestamp::\n    timestamp_ntz\n\n)\n as is_closed_this_quarter\n\n\n    from source\n)\n\n\nselect * from renamed"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.7741494178771973, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T11:15:55.210234Z", "completed_at": "2020-11-06T11:15:55.260564Z"}, {"name": "execute", "started_at": "2020-11-06T11:15:55.261148Z", "completed_at": "2020-11-06T11:15:55.918346Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_salesforce_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{% if var(\"stg_salesforce_crm_etl\") == 'fivetran' %}\r\n    WITH source AS (\r\n\r\n    select * from {{ var('stg_salesforce_schema') }}.{{ var('stg_salesforce_user_table') }}\r\n\r\n    ),renamed as (\r\n        select \r\n          id as user_id,\r\n          username,\r\n          name,\r\n          city,\r\n          state,\r\n          manager_id,\r\n          user_role_id,\r\n          company_name,\r\n          email,\r\n          user_type,\r\n          employee_number,\r\n          TIME_ZONE_SID_KEY,\r\n          case\r\n          when TIME_ZONE_SID_KEY='America/Los_Angeles' then '$' \r\n          when TIME_ZONE_SID_KEY='India' then 'INR' else null end as rupeesympol,\r\n          CREATED_DATE,\r\n          CREATED_BY_ID,\r\n          LAST_MODIFIED_DATE,\r\n          LAST_MODIFIED_BY_ID,\r\n          _FIVETRAN_DELETED as IS_DELETED\r\n        from source \r\n        )\r\n\r\n{% endif %}\r\n\r\nselect * from renamed", "compiled": true, "database": "FIVETRAN_DATABASE", "schema": "dbt_dataflo_staging", "fqn": ["FivetranDbt_Transformation", "sources", "stg_salesforce", "stg_sf_user"], "unique_id": "model.FivetranDbt_Transformation.stg_sf_user", "package_name": "FivetranDbt_Transformation", "root_path": "/usr/src/develop/user-10139/environment-12915/repository-10542", "path": "sources/stg_salesforce/stg_sf_user.sql", "original_file_path": "models/sources/stg_salesforce/stg_sf_user.sql", "name": "stg_sf_user", "resource_type": "model", "alias": "stg_sf_user", "checksum": {"name": "sha256", "checksum": "1c25d7683a014077e48b5f3696d8caa2680106273737a902421ea495d8c9eb96"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {"user_id": {"name": "user_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/sources/stg_salesforce/schema.yml", "build_path": "target/run/FivetranDbt_Transformation/models/sources/stg_salesforce/stg_sf_user.sql", "deferred": false, "compiled_sql": "\n\n\n    WITH source AS (\n\n    select * from salesforce.user\n\n    ),renamed as (\n        select \n          id as user_id,\n          username,\n          name,\n          city,\n          state,\n          manager_id,\n          user_role_id,\n          company_name,\n          email,\n          user_type,\n          employee_number,\n          TIME_ZONE_SID_KEY,\n          case\n          when TIME_ZONE_SID_KEY='America/Los_Angeles' then '$' \n          when TIME_ZONE_SID_KEY='India' then 'INR' else null end as rupeesympol,\n          CREATED_DATE,\n          CREATED_BY_ID,\n          LAST_MODIFIED_DATE,\n          LAST_MODIFIED_BY_ID,\n          _FIVETRAN_DELETED as IS_DELETED\n        from source \n        )\n\n\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n    WITH source AS (\n\n    select * from salesforce.user\n\n    ),renamed as (\n        select \n          id as user_id,\n          username,\n          name,\n          city,\n          state,\n          manager_id,\n          user_role_id,\n          company_name,\n          email,\n          user_type,\n          employee_number,\n          TIME_ZONE_SID_KEY,\n          case\n          when TIME_ZONE_SID_KEY='America/Los_Angeles' then '$' \n          when TIME_ZONE_SID_KEY='India' then 'INR' else null end as rupeesympol,\n          CREATED_DATE,\n          CREATED_BY_ID,\n          LAST_MODIFIED_DATE,\n          LAST_MODIFIED_BY_ID,\n          _FIVETRAN_DELETED as IS_DELETED\n        from source \n        )\n\n\n\nselect * from renamed"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.851503849029541, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T11:15:55.987516Z", "completed_at": "2020-11-06T11:15:56.012277Z"}, {"name": "execute", "started_at": "2020-11-06T11:15:56.012630Z", "completed_at": "2020-11-06T11:15:56.645441Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_salesforce_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{% if var(\"stg_salesforce_crm_etl\") == 'fivetran' %}\r\n\r\n with source as (\r\n\r\n  select * from {{ var('stg_salesforce_schema') }}.{{ var('stg_salesforce_lead_table')}}\r\n\r\n  ),renamed as (\r\n    select\r\n\r\n        id as lead_id,\r\n        -- keys\r\n        owner_id as lead_owner_id,\r\n        converted_opportunity_id as opportunity_id,\r\n        converted_account_id as account_id,\r\n        converted_contact_id as contact_id,\r\n\r\n        -- conversion pipeline\r\n        lead_source,\r\n        status,\r\n        is_converted,\r\n        converted_date,\r\n        industry,\r\n        annual_revenue,\r\n\r\n        -- contact\r\n        first_name,\r\n        last_name,\r\n        name as full_name,\r\n        title,\r\n        email,\r\n        phone as work_phone,\r\n        mobile_phone,\r\n        COUNTRY,\r\n       \r\n        -- outreach\r\n        is_unread_by_owner,\r\n\r\n        -- company context\r\n        company as company_name,\r\n        city as company_city,\r\n        website,\r\n        number_of_employees,\r\n\r\n        -- metadata\r\n        last_activity_date,\r\n        created_date as created_at,\r\n        last_modified_date as updated_at,\r\n        IS_DELETED,\r\n        DATEADD(DD,-7,GETDATE()) AS WEEKAGO,\r\n        DATEADD(MM,-1,GETDATE()) AS MONTHAGO,\r\n\r\n        clean_status,\r\n        individual_id,\r\n        product_interest_c as product_interest,\r\n        current_generators_c as current_generators\r\n\r\n    from source  \r\n    )\r\n    \r\n{% endif %}\r\n\r\nselect * from renamed", "compiled": true, "database": "FIVETRAN_DATABASE", "schema": "dbt_dataflo_staging", "fqn": ["FivetranDbt_Transformation", "sources", "stg_salesforce", "stg_sf_lead"], "unique_id": "model.FivetranDbt_Transformation.stg_sf_lead", "package_name": "FivetranDbt_Transformation", "root_path": "/usr/src/develop/user-10139/environment-12915/repository-10542", "path": "sources/stg_salesforce/stg_sf_lead.sql", "original_file_path": "models/sources/stg_salesforce/stg_sf_lead.sql", "name": "stg_sf_lead", "resource_type": "model", "alias": "stg_sf_lead", "checksum": {"name": "sha256", "checksum": "287dbfae36a9bbbc55d9d821cc6dc418bdcf98c9f5c0668b17d4e37b5cdad3c5"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {"lead_id": {"name": "lead_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/sources/stg_salesforce/schema.yml", "build_path": "target/run/FivetranDbt_Transformation/models/sources/stg_salesforce/stg_sf_lead.sql", "deferred": false, "compiled_sql": "\n\n\n\n with source as (\n\n  select * from salesforce.lead\n\n  ),renamed as (\n    select\n\n        id as lead_id,\n        -- keys\n        owner_id as lead_owner_id,\n        converted_opportunity_id as opportunity_id,\n        converted_account_id as account_id,\n        converted_contact_id as contact_id,\n\n        -- conversion pipeline\n        lead_source,\n        status,\n        is_converted,\n        converted_date,\n        industry,\n        annual_revenue,\n\n        -- contact\n        first_name,\n        last_name,\n        name as full_name,\n        title,\n        email,\n        phone as work_phone,\n        mobile_phone,\n        COUNTRY,\n       \n        -- outreach\n        is_unread_by_owner,\n\n        -- company context\n        company as company_name,\n        city as company_city,\n        website,\n        number_of_employees,\n\n        -- metadata\n        last_activity_date,\n        created_date as created_at,\n        last_modified_date as updated_at,\n        IS_DELETED,\n        DATEADD(DD,-7,GETDATE()) AS WEEKAGO,\n        DATEADD(MM,-1,GETDATE()) AS MONTHAGO,\n\n        clean_status,\n        individual_id,\n        product_interest_c as product_interest,\n        current_generators_c as current_generators\n\n    from source  \n    )\n    \n\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n with source as (\n\n  select * from salesforce.lead\n\n  ),renamed as (\n    select\n\n        id as lead_id,\n        -- keys\n        owner_id as lead_owner_id,\n        converted_opportunity_id as opportunity_id,\n        converted_account_id as account_id,\n        converted_contact_id as contact_id,\n\n        -- conversion pipeline\n        lead_source,\n        status,\n        is_converted,\n        converted_date,\n        industry,\n        annual_revenue,\n\n        -- contact\n        first_name,\n        last_name,\n        name as full_name,\n        title,\n        email,\n        phone as work_phone,\n        mobile_phone,\n        COUNTRY,\n       \n        -- outreach\n        is_unread_by_owner,\n\n        -- company context\n        company as company_name,\n        city as company_city,\n        website,\n        number_of_employees,\n\n        -- metadata\n        last_activity_date,\n        created_date as created_at,\n        last_modified_date as updated_at,\n        IS_DELETED,\n        DATEADD(DD,-7,GETDATE()) AS WEEKAGO,\n        DATEADD(MM,-1,GETDATE()) AS MONTHAGO,\n\n        clean_status,\n        individual_id,\n        product_interest_c as product_interest,\n        current_generators_c as current_generators\n\n    from source  \n    )\n    \n\n\nselect * from renamed"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.8517029285430908, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T11:15:56.844256Z", "completed_at": "2020-11-06T11:15:56.876122Z"}, {"name": "execute", "started_at": "2020-11-06T11:15:56.876525Z", "completed_at": "2020-11-06T11:15:57.633197Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH ACQUISITION_OVERVIEW AS (\r\n\r\n      \r\n     select * from {{ 'DATAFLO_GOOGLEANALYTICS.ACQUISITION_OVERVIEW' }}  \r\n\r\n)\r\n\r\nselect \r\n    ACCOUNT_ID\tas ACQU_ACCOUNT_ID\r\n    ,END_DATE AS ACQU_END_DATE\t\r\n    ,GA_ACQUISITIONMEDIUM\t\r\n    ,GA_ACQUISITIONSOURCE\t\r\n    ,GA_ACQUISITIONSOURCEMEDIUM\t\r\n    ,GA_ACQUISITIONTRAFFICCHANNEL\t\r\n    ,GA_AVGSESSIONDURATION as ACQU_GA_AVGSESSIONDURATION\r\n    ,GA_BOUNCERATE\tAS ACQU_GA_BOUNCERATE\r\n    ,GA_PAGEVIEWSPERSESSION\tAS ACQU_GA_PAGEVIEWSPERSESSION\r\n    ,GA_SESSIONS AS ACQU_GA_SESSIONS\t\r\n    ,PROFILE_ID\tAS ACQU_PROFILE_ID\r\n    ,START_DATE\tAS ACQU_START_DATE\r\n    ,WEB_PROPERTY_ID AS ACQU_WEB_PROPERTY_ID\t\r\n    \t\r\n from ACQUISITION_OVERVIEW", "compiled": true, "database": "FIVETRAN_DATABASE", "schema": "dbt_dataflo_staging", "fqn": ["FivetranDbt_Transformation", "sources", "stg_sf_google_analytics", "stg_ga_aq_overview"], "unique_id": "model.FivetranDbt_Transformation.stg_ga_aq_overview", "package_name": "FivetranDbt_Transformation", "root_path": "/usr/src/develop/user-10139/environment-12915/repository-10542", "path": "sources/stg_sf_google_analytics/stg_ga_aq_overview.sql", "original_file_path": "models/sources/stg_sf_google_analytics/stg_ga_aq_overview.sql", "name": "stg_ga_aq_overview", "resource_type": "model", "alias": "stg_ga_aq_overview", "checksum": {"name": "sha256", "checksum": "91bb99807fcd576d7911400faede366d8c10d211be1e66464ac830fdbca34f6d"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/FivetranDbt_Transformation/models/sources/stg_sf_google_analytics/stg_ga_aq_overview.sql", "deferred": false, "compiled_sql": "WITH ACQUISITION_OVERVIEW AS (\n\n      \n     select * from DATAFLO_GOOGLEANALYTICS.ACQUISITION_OVERVIEW  \n\n)\n\nselect \n    ACCOUNT_ID\tas ACQU_ACCOUNT_ID\n    ,END_DATE AS ACQU_END_DATE\t\n    ,GA_ACQUISITIONMEDIUM\t\n    ,GA_ACQUISITIONSOURCE\t\n    ,GA_ACQUISITIONSOURCEMEDIUM\t\n    ,GA_ACQUISITIONTRAFFICCHANNEL\t\n    ,GA_AVGSESSIONDURATION as ACQU_GA_AVGSESSIONDURATION\n    ,GA_BOUNCERATE\tAS ACQU_GA_BOUNCERATE\n    ,GA_PAGEVIEWSPERSESSION\tAS ACQU_GA_PAGEVIEWSPERSESSION\n    ,GA_SESSIONS AS ACQU_GA_SESSIONS\t\n    ,PROFILE_ID\tAS ACQU_PROFILE_ID\n    ,START_DATE\tAS ACQU_START_DATE\n    ,WEB_PROPERTY_ID AS ACQU_WEB_PROPERTY_ID\t\n    \t\n from ACQUISITION_OVERVIEW", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH ACQUISITION_OVERVIEW AS (\n\n      \n     select * from DATAFLO_GOOGLEANALYTICS.ACQUISITION_OVERVIEW  \n\n)\n\nselect \n    ACCOUNT_ID\tas ACQU_ACCOUNT_ID\n    ,END_DATE AS ACQU_END_DATE\t\n    ,GA_ACQUISITIONMEDIUM\t\n    ,GA_ACQUISITIONSOURCE\t\n    ,GA_ACQUISITIONSOURCEMEDIUM\t\n    ,GA_ACQUISITIONTRAFFICCHANNEL\t\n    ,GA_AVGSESSIONDURATION as ACQU_GA_AVGSESSIONDURATION\n    ,GA_BOUNCERATE\tAS ACQU_GA_BOUNCERATE\n    ,GA_PAGEVIEWSPERSESSION\tAS ACQU_GA_PAGEVIEWSPERSESSION\n    ,GA_SESSIONS AS ACQU_GA_SESSIONS\t\n    ,PROFILE_ID\tAS ACQU_PROFILE_ID\n    ,START_DATE\tAS ACQU_START_DATE\n    ,WEB_PROPERTY_ID AS ACQU_WEB_PROPERTY_ID\t\n    \t\n from ACQUISITION_OVERVIEW"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.7606017589569092, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T11:15:57.698891Z", "completed_at": "2020-11-06T11:15:57.725751Z"}, {"name": "execute", "started_at": "2020-11-06T11:15:57.726114Z", "completed_at": "2020-11-06T11:15:58.384968Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH AUDIENCE_GEO_LOCATION AS (\r\n\r\n      \r\n     select * from {{ 'DATAFLO_GOOGLEANALYTICS.AUDIENCE_GEO_LOCATION' }}  \r\n\r\n)\r\n\r\nselect \r\nACCOUNT_ID AS AUD_GEOLOC_ACCOUNT_ID\t\r\n,END_DATE AS AUD_GEOLOC_END_DATE\t\r\n,GA_AVGSESSIONDURATION\tAS AUD_GEOLOC_GA_AVGSESSIONDURATION\r\n,GA_BOUNCERATE\tAS AUD_GEOLOC_GA_BOUNCERATE\r\n,GA_CITY AS AUD_GEOLOC_GA_CITY\t\r\n,GA_CONTINENT AS AUD_GEOLOC_GA_CONTINENT\t\r\n,GA_COUNTRY\tAS AUD_GEOLOC_GA_COUNTRY\r\n,GA_DATE AS AUD_GEOLOC_GA_DATE\t\r\n,GA_NEWUSERS AS AUD_GEOLOC_GA_NEWUSERS\t\r\n,GA_PAGEVIEWSPERSESSION\tAS AUD_GEOLOC_GA_PAGEVIEWSPERSESSION\r\n,GA_SESSIONS AS AUD_GEOLOC_GA_SESSIONS\r\n,GA_SUBCONTINENT AS AUD_GEOLOC_GA_SUBCONTINENT\t\r\n,GA_USERS\tAS AUD_GEOLOC_GA_USERS\r\n,PROFILE_ID\tAS AUD_GEOLOC_PROFILE_ID\r\n,START_DATE\tAS AUD_GEOLOC_START_DATE\r\n,WEB_PROPERTY_ID AS AUD_GEOLOC_WEB_PROPERTY_ID\r\n\r\nfrom AUDIENCE_GEO_LOCATION", "compiled": true, "database": "FIVETRAN_DATABASE", "schema": "dbt_dataflo_staging", "fqn": ["FivetranDbt_Transformation", "sources", "stg_sf_google_analytics", "stg_ga_aud_geoloc"], "unique_id": "model.FivetranDbt_Transformation.stg_ga_aud_geoloc", "package_name": "FivetranDbt_Transformation", "root_path": "/usr/src/develop/user-10139/environment-12915/repository-10542", "path": "sources/stg_sf_google_analytics/stg_ga_aud_geoloc.sql", "original_file_path": "models/sources/stg_sf_google_analytics/stg_ga_aud_geoloc.sql", "name": "stg_ga_aud_geoloc", "resource_type": "model", "alias": "stg_ga_aud_geoloc", "checksum": {"name": "sha256", "checksum": "161182caecc0fb3ded587bfcdc469a7804ca5befb187aaeabcf1ec3a45869e34"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/FivetranDbt_Transformation/models/sources/stg_sf_google_analytics/stg_ga_aud_geoloc.sql", "deferred": false, "compiled_sql": "WITH AUDIENCE_GEO_LOCATION AS (\n\n      \n     select * from DATAFLO_GOOGLEANALYTICS.AUDIENCE_GEO_LOCATION  \n\n)\n\nselect \nACCOUNT_ID AS AUD_GEOLOC_ACCOUNT_ID\t\n,END_DATE AS AUD_GEOLOC_END_DATE\t\n,GA_AVGSESSIONDURATION\tAS AUD_GEOLOC_GA_AVGSESSIONDURATION\n,GA_BOUNCERATE\tAS AUD_GEOLOC_GA_BOUNCERATE\n,GA_CITY AS AUD_GEOLOC_GA_CITY\t\n,GA_CONTINENT AS AUD_GEOLOC_GA_CONTINENT\t\n,GA_COUNTRY\tAS AUD_GEOLOC_GA_COUNTRY\n,GA_DATE AS AUD_GEOLOC_GA_DATE\t\n,GA_NEWUSERS AS AUD_GEOLOC_GA_NEWUSERS\t\n,GA_PAGEVIEWSPERSESSION\tAS AUD_GEOLOC_GA_PAGEVIEWSPERSESSION\n,GA_SESSIONS AS AUD_GEOLOC_GA_SESSIONS\n,GA_SUBCONTINENT AS AUD_GEOLOC_GA_SUBCONTINENT\t\n,GA_USERS\tAS AUD_GEOLOC_GA_USERS\n,PROFILE_ID\tAS AUD_GEOLOC_PROFILE_ID\n,START_DATE\tAS AUD_GEOLOC_START_DATE\n,WEB_PROPERTY_ID AS AUD_GEOLOC_WEB_PROPERTY_ID\n\nfrom AUDIENCE_GEO_LOCATION", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH AUDIENCE_GEO_LOCATION AS (\n\n      \n     select * from DATAFLO_GOOGLEANALYTICS.AUDIENCE_GEO_LOCATION  \n\n)\n\nselect \nACCOUNT_ID AS AUD_GEOLOC_ACCOUNT_ID\t\n,END_DATE AS AUD_GEOLOC_END_DATE\t\n,GA_AVGSESSIONDURATION\tAS AUD_GEOLOC_GA_AVGSESSIONDURATION\n,GA_BOUNCERATE\tAS AUD_GEOLOC_GA_BOUNCERATE\n,GA_CITY AS AUD_GEOLOC_GA_CITY\t\n,GA_CONTINENT AS AUD_GEOLOC_GA_CONTINENT\t\n,GA_COUNTRY\tAS AUD_GEOLOC_GA_COUNTRY\n,GA_DATE AS AUD_GEOLOC_GA_DATE\t\n,GA_NEWUSERS AS AUD_GEOLOC_GA_NEWUSERS\t\n,GA_PAGEVIEWSPERSESSION\tAS AUD_GEOLOC_GA_PAGEVIEWSPERSESSION\n,GA_SESSIONS AS AUD_GEOLOC_GA_SESSIONS\n,GA_SUBCONTINENT AS AUD_GEOLOC_GA_SUBCONTINENT\t\n,GA_USERS\tAS AUD_GEOLOC_GA_USERS\n,PROFILE_ID\tAS AUD_GEOLOC_PROFILE_ID\n,START_DATE\tAS AUD_GEOLOC_START_DATE\n,WEB_PROPERTY_ID AS AUD_GEOLOC_WEB_PROPERTY_ID\n\nfrom AUDIENCE_GEO_LOCATION"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.7662568092346191, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T11:15:58.464267Z", "completed_at": "2020-11-06T11:15:58.498683Z"}, {"name": "execute", "started_at": "2020-11-06T11:15:58.499192Z", "completed_at": "2020-11-06T11:15:59.162715Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH AUDIENCE_OVERVIEW AS (\r\n\r\n      \r\n     select * from {{ 'DATAFLO_GOOGLEANALYTICS.AUDIENCE_OVERVIEW' }}  \r\n\r\n)\r\n\r\nselect \r\n    ACCOUNT_ID\t AS AUD_OVERVIEW_ACCOUNT_ID ,\r\n    END_DATE\t AS AUD_OVERVIEW_END_DATE ,\r\n    GA_AVGSESSIONDURATION\t AS AUD_OVERVIEW_GA_AVGSESSIONDURATION ,\r\n    GA_BOUNCERATE\t AS AUD_OVERVIEW_GA_BOUNCERATE ,\r\n    GA_DATE\t AS AUD_OVERVIEW_GA_DATE ,\r\n    GA_NEWUSERS\t AS AUD_OVERVIEW_GA_NEWUSERS ,\r\n    GA_PAGEVIEWS\t AS AUD_OVERVIEW_GA_PAGEVIEWS ,\r\n    GA_PAGEVIEWSPERSESSION\t AS AUD_OVERVIEW_GA_PAGEVIEWSPERSESSION ,\r\n    GA_SESSIONS\t AS AUD_OVERVIEW_GA_SESSIONS ,\r\n    GA_SESSIONSPERUSER\t AS AUD_OVERVIEW_GA_SESSIONSPERUSER ,\r\n    GA_USERS\t AS AUD_OVERVIEW_GA_USERS ,\r\n    PROFILE_ID\t AS AUD_OVERVIEW_PROFILE_ID ,\r\n    START_DATE\t AS AUD_OVERVIEW_START_DATE ,\r\n    WEB_PROPERTY_ID AS AUD_OVERVIEW_WEB_PROPERTY_ID \r\n    \r\n from AUDIENCE_OVERVIEW", "compiled": true, "database": "FIVETRAN_DATABASE", "schema": "dbt_dataflo_staging", "fqn": ["FivetranDbt_Transformation", "sources", "stg_sf_google_analytics", "stg_ga_audi_overview"], "unique_id": "model.FivetranDbt_Transformation.stg_ga_audi_overview", "package_name": "FivetranDbt_Transformation", "root_path": "/usr/src/develop/user-10139/environment-12915/repository-10542", "path": "sources/stg_sf_google_analytics/stg_ga_audi_overview.sql", "original_file_path": "models/sources/stg_sf_google_analytics/stg_ga_audi_overview.sql", "name": "stg_ga_audi_overview", "resource_type": "model", "alias": "stg_ga_audi_overview", "checksum": {"name": "sha256", "checksum": "a3f1527f19935b78043a52c1be2813216d0a74f1cc7e86406327b6e465a8823c"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/FivetranDbt_Transformation/models/sources/stg_sf_google_analytics/stg_ga_audi_overview.sql", "deferred": false, "compiled_sql": "WITH AUDIENCE_OVERVIEW AS (\n\n      \n     select * from DATAFLO_GOOGLEANALYTICS.AUDIENCE_OVERVIEW  \n\n)\n\nselect \n    ACCOUNT_ID\t AS AUD_OVERVIEW_ACCOUNT_ID ,\n    END_DATE\t AS AUD_OVERVIEW_END_DATE ,\n    GA_AVGSESSIONDURATION\t AS AUD_OVERVIEW_GA_AVGSESSIONDURATION ,\n    GA_BOUNCERATE\t AS AUD_OVERVIEW_GA_BOUNCERATE ,\n    GA_DATE\t AS AUD_OVERVIEW_GA_DATE ,\n    GA_NEWUSERS\t AS AUD_OVERVIEW_GA_NEWUSERS ,\n    GA_PAGEVIEWS\t AS AUD_OVERVIEW_GA_PAGEVIEWS ,\n    GA_PAGEVIEWSPERSESSION\t AS AUD_OVERVIEW_GA_PAGEVIEWSPERSESSION ,\n    GA_SESSIONS\t AS AUD_OVERVIEW_GA_SESSIONS ,\n    GA_SESSIONSPERUSER\t AS AUD_OVERVIEW_GA_SESSIONSPERUSER ,\n    GA_USERS\t AS AUD_OVERVIEW_GA_USERS ,\n    PROFILE_ID\t AS AUD_OVERVIEW_PROFILE_ID ,\n    START_DATE\t AS AUD_OVERVIEW_START_DATE ,\n    WEB_PROPERTY_ID AS AUD_OVERVIEW_WEB_PROPERTY_ID \n    \n from AUDIENCE_OVERVIEW", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH AUDIENCE_OVERVIEW AS (\n\n      \n     select * from DATAFLO_GOOGLEANALYTICS.AUDIENCE_OVERVIEW  \n\n)\n\nselect \n    ACCOUNT_ID\t AS AUD_OVERVIEW_ACCOUNT_ID ,\n    END_DATE\t AS AUD_OVERVIEW_END_DATE ,\n    GA_AVGSESSIONDURATION\t AS AUD_OVERVIEW_GA_AVGSESSIONDURATION ,\n    GA_BOUNCERATE\t AS AUD_OVERVIEW_GA_BOUNCERATE ,\n    GA_DATE\t AS AUD_OVERVIEW_GA_DATE ,\n    GA_NEWUSERS\t AS AUD_OVERVIEW_GA_NEWUSERS ,\n    GA_PAGEVIEWS\t AS AUD_OVERVIEW_GA_PAGEVIEWS ,\n    GA_PAGEVIEWSPERSESSION\t AS AUD_OVERVIEW_GA_PAGEVIEWSPERSESSION ,\n    GA_SESSIONS\t AS AUD_OVERVIEW_GA_SESSIONS ,\n    GA_SESSIONSPERUSER\t AS AUD_OVERVIEW_GA_SESSIONSPERUSER ,\n    GA_USERS\t AS AUD_OVERVIEW_GA_USERS ,\n    PROFILE_ID\t AS AUD_OVERVIEW_PROFILE_ID ,\n    START_DATE\t AS AUD_OVERVIEW_START_DATE ,\n    WEB_PROPERTY_ID AS AUD_OVERVIEW_WEB_PROPERTY_ID \n    \n from AUDIENCE_OVERVIEW"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.7289962768554688, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T11:15:59.233515Z", "completed_at": "2020-11-06T11:15:59.257155Z"}, {"name": "execute", "started_at": "2020-11-06T11:15:59.257481Z", "completed_at": "2020-11-06T11:15:59.892918Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH AUDIENCE_TECHNOLOGY AS (\r\n\r\n      \r\n     select * from {{ 'DATAFLO_GOOGLEANALYTICS.AUDIENCE_TECHNOLOGY' }}  \r\n\r\n)\r\n\r\nselect \r\n    ACCOUNT_ID\tAS AUD_TECH_ACCOUNT_ID ,\r\n    END_DATE\tAS AUD_TECH_END_DATE ,\r\n    GA_AVGSESSIONDURATION\tAS AUD_TECH_GA_AVGSESSIONDURATION ,\r\n    GA_BOUNCERATE\tAS AUD_TECH_GA_BOUNCERATE ,\r\n    GA_BROWSER\tAS AUD_TECH_GA_BROWSER ,\r\n    GA_DATE\tAS AUD_TECH_GA_DATE ,\r\n    GA_NEWUSERS\tAS AUD_TECH_GA_NEWUSERS ,\r\n    GA_OPERATINGSYSTEM\tAS AUD_TECH_GA_OPERATINGSYSTEM ,\r\n    GA_PAGEVIEWSPERSESSION\tAS AUD_TECH_GA_PAGEVIEWSPERSESSION ,\r\n    GA_SESSIONS\tAS AUD_TECH_GA_SESSIONS ,\r\n    GA_USERS\tAS AUD_TECH_GA_USERS ,\r\n    PROFILE_ID\tAS AUD_TECH_PROFILE_ID ,\r\n    START_DATE\tAS AUD_TECH_START_DATE ,\r\n    WEB_PROPERTY_ID AS AUD_TECH_WEB_PROPERTY_ID \r\n\r\nfrom AUDIENCE_TECHNOLOGY", "compiled": true, "database": "FIVETRAN_DATABASE", "schema": "dbt_dataflo_staging", "fqn": ["FivetranDbt_Transformation", "sources", "stg_sf_google_analytics", "stg_ga_audi_techno"], "unique_id": "model.FivetranDbt_Transformation.stg_ga_audi_techno", "package_name": "FivetranDbt_Transformation", "root_path": "/usr/src/develop/user-10139/environment-12915/repository-10542", "path": "sources/stg_sf_google_analytics/stg_ga_audi_techno.sql", "original_file_path": "models/sources/stg_sf_google_analytics/stg_ga_audi_techno.sql", "name": "stg_ga_audi_techno", "resource_type": "model", "alias": "stg_ga_audi_techno", "checksum": {"name": "sha256", "checksum": "b882b40af35a4ebcb8639ee362fcde264c2b22fcb6a82b7350873ab3197fb851"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/FivetranDbt_Transformation/models/sources/stg_sf_google_analytics/stg_ga_audi_techno.sql", "deferred": false, "compiled_sql": "WITH AUDIENCE_TECHNOLOGY AS (\n\n      \n     select * from DATAFLO_GOOGLEANALYTICS.AUDIENCE_TECHNOLOGY  \n\n)\n\nselect \n    ACCOUNT_ID\tAS AUD_TECH_ACCOUNT_ID ,\n    END_DATE\tAS AUD_TECH_END_DATE ,\n    GA_AVGSESSIONDURATION\tAS AUD_TECH_GA_AVGSESSIONDURATION ,\n    GA_BOUNCERATE\tAS AUD_TECH_GA_BOUNCERATE ,\n    GA_BROWSER\tAS AUD_TECH_GA_BROWSER ,\n    GA_DATE\tAS AUD_TECH_GA_DATE ,\n    GA_NEWUSERS\tAS AUD_TECH_GA_NEWUSERS ,\n    GA_OPERATINGSYSTEM\tAS AUD_TECH_GA_OPERATINGSYSTEM ,\n    GA_PAGEVIEWSPERSESSION\tAS AUD_TECH_GA_PAGEVIEWSPERSESSION ,\n    GA_SESSIONS\tAS AUD_TECH_GA_SESSIONS ,\n    GA_USERS\tAS AUD_TECH_GA_USERS ,\n    PROFILE_ID\tAS AUD_TECH_PROFILE_ID ,\n    START_DATE\tAS AUD_TECH_START_DATE ,\n    WEB_PROPERTY_ID AS AUD_TECH_WEB_PROPERTY_ID \n\nfrom AUDIENCE_TECHNOLOGY", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH AUDIENCE_TECHNOLOGY AS (\n\n      \n     select * from DATAFLO_GOOGLEANALYTICS.AUDIENCE_TECHNOLOGY  \n\n)\n\nselect \n    ACCOUNT_ID\tAS AUD_TECH_ACCOUNT_ID ,\n    END_DATE\tAS AUD_TECH_END_DATE ,\n    GA_AVGSESSIONDURATION\tAS AUD_TECH_GA_AVGSESSIONDURATION ,\n    GA_BOUNCERATE\tAS AUD_TECH_GA_BOUNCERATE ,\n    GA_BROWSER\tAS AUD_TECH_GA_BROWSER ,\n    GA_DATE\tAS AUD_TECH_GA_DATE ,\n    GA_NEWUSERS\tAS AUD_TECH_GA_NEWUSERS ,\n    GA_OPERATINGSYSTEM\tAS AUD_TECH_GA_OPERATINGSYSTEM ,\n    GA_PAGEVIEWSPERSESSION\tAS AUD_TECH_GA_PAGEVIEWSPERSESSION ,\n    GA_SESSIONS\tAS AUD_TECH_GA_SESSIONS ,\n    GA_USERS\tAS AUD_TECH_GA_USERS ,\n    PROFILE_ID\tAS AUD_TECH_PROFILE_ID ,\n    START_DATE\tAS AUD_TECH_START_DATE ,\n    WEB_PROPERTY_ID AS AUD_TECH_WEB_PROPERTY_ID \n\nfrom AUDIENCE_TECHNOLOGY"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.8470108509063721, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T11:15:59.967303Z", "completed_at": "2020-11-06T11:15:59.996930Z"}, {"name": "execute", "started_at": "2020-11-06T11:15:59.997391Z", "completed_at": "2020-11-06T11:16:00.653170Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_salesforce_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{% if var(\"stg_salesforce_crm_etl\") == 'fivetran' %}\r\n    WITH source AS (\r\n\r\n    select * from {{ var('stg_salesforce_schema') }}.{{ var('stg_salesforce_contact_table') }} \r\n\r\n    ),renamed as (\r\n      select\r\n        id as contact_id,\r\n        name as contact_name,\r\n       --keys\r\n        account_id,\r\n        owner_id as contact_owner_id,\r\n\r\n        title,\r\n        email as contact_email,\r\n        department,\r\n        assistant_name,\r\n        lead_source,\r\n        clean_status,\r\n        level_c,\r\n        languages_c ,\r\n        CREATED_DATE,\r\n        IS_DELETED\r\n     from source\r\n    )\r\n{% endif %}\r\n\r\nselect * from renamed", "compiled": true, "database": "FIVETRAN_DATABASE", "schema": "dbt_dataflo_staging", "fqn": ["FivetranDbt_Transformation", "sources", "stg_salesforce", "stg_sf_contact"], "unique_id": "model.FivetranDbt_Transformation.stg_sf_contact", "package_name": "FivetranDbt_Transformation", "root_path": "/usr/src/develop/user-10139/environment-12915/repository-10542", "path": "sources/stg_salesforce/stg_sf_contact.sql", "original_file_path": "models/sources/stg_salesforce/stg_sf_contact.sql", "name": "stg_sf_contact", "resource_type": "model", "alias": "stg_sf_contact", "checksum": {"name": "sha256", "checksum": "fa5a452808cbfd357f727c17c2b995cc4a334b72d2ac72dd16953e82de34d006"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {"contact_id": {"name": "contact_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/sources/stg_salesforce/schema.yml", "build_path": "target/run/FivetranDbt_Transformation/models/sources/stg_salesforce/stg_sf_contact.sql", "deferred": false, "compiled_sql": "\n\n\n    WITH source AS (\n\n    select * from salesforce.contact \n\n    ),renamed as (\n      select\n        id as contact_id,\n        name as contact_name,\n       --keys\n        account_id,\n        owner_id as contact_owner_id,\n\n        title,\n        email as contact_email,\n        department,\n        assistant_name,\n        lead_source,\n        clean_status,\n        level_c,\n        languages_c ,\n        CREATED_DATE,\n        IS_DELETED\n     from source\n    )\n\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n    WITH source AS (\n\n    select * from salesforce.contact \n\n    ),renamed as (\n      select\n        id as contact_id,\n        name as contact_name,\n       --keys\n        account_id,\n        owner_id as contact_owner_id,\n\n        title,\n        email as contact_email,\n        department,\n        assistant_name,\n        lead_source,\n        clean_status,\n        level_c,\n        languages_c ,\n        CREATED_DATE,\n        IS_DELETED\n     from source\n    )\n\n\nselect * from renamed"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.7875871658325195, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T11:16:00.817175Z", "completed_at": "2020-11-06T11:16:00.843861Z"}, {"name": "execute", "started_at": "2020-11-06T11:16:00.844228Z", "completed_at": "2020-11-06T11:16:01.540157Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_salesforce_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{% if var(\"stg_salesforce_crm_etl\") == 'fivetran' %}\r\n    WITH source AS (\r\n\r\n    select * from {{ var('stg_salesforce_schema') }}.{{ var('stg_salesforce_user_role_table') }}\r\n\r\n    ), renamed as (\r\n\r\n    select \r\n\r\n      id as user_role_id,\r\n      name as role_name,\r\n      developer_name,\r\n      _fivetran_deleted as IS_DELETED\r\n\r\n    from source\r\n    )\r\n{% endif %}\r\n\r\nselect * from renamed", "compiled": true, "database": "FIVETRAN_DATABASE", "schema": "dbt_dataflo_staging", "fqn": ["FivetranDbt_Transformation", "sources", "stg_salesforce", "stg_sf_user_role"], "unique_id": "model.FivetranDbt_Transformation.stg_sf_user_role", "package_name": "FivetranDbt_Transformation", "root_path": "/usr/src/develop/user-10139/environment-12915/repository-10542", "path": "sources/stg_salesforce/stg_sf_user_role.sql", "original_file_path": "models/sources/stg_salesforce/stg_sf_user_role.sql", "name": "stg_sf_user_role", "resource_type": "model", "alias": "stg_sf_user_role", "checksum": {"name": "sha256", "checksum": "7e8d5de1957e3c94cf974150b759f872c5b9050a3f8e8585e9dff4b96ce66d25"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {"user_role_id": {"name": "user_role_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/sources/stg_salesforce/schema.yml", "build_path": "target/run/FivetranDbt_Transformation/models/sources/stg_salesforce/stg_sf_user_role.sql", "deferred": false, "compiled_sql": "\n\n\n    WITH source AS (\n\n    select * from salesforce.user_role\n\n    ), renamed as (\n\n    select \n\n      id as user_role_id,\n      name as role_name,\n      developer_name,\n      _fivetran_deleted as IS_DELETED\n\n    from source\n    )\n\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n    WITH source AS (\n\n    select * from salesforce.user_role\n\n    ), renamed as (\n\n    select \n\n      id as user_role_id,\n      name as role_name,\n      developer_name,\n      _fivetran_deleted as IS_DELETED\n\n    from source\n    )\n\n\nselect * from renamed"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.9584372043609619, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T11:16:01.607843Z", "completed_at": "2020-11-06T11:16:01.641163Z"}, {"name": "execute", "started_at": "2020-11-06T11:16:01.641661Z", "completed_at": "2020-11-06T11:16:02.499180Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "--Dimension table account & user join\r\nwith account as (\r\n\r\n    SELECT * FROM {{ ref('stg_sf_account') }}\r\n),account_user as(\r\n    SELECT * FROM {{ ref('stg_sf_user') }}\r\n)\r\n\r\nSELECT \r\n    account_user.*,\r\n    account_id,\r\n    account_name,\r\n    -- keys\r\n    parent_id,\r\n    account_owner_id,\r\n    -- logistics\r\n    account_type, \r\n    account_number\r\n    \r\n    \r\n    FROM account\r\n    LEFT JOIN \r\n        (select \r\n            user_id,\r\n            username,\r\n            user_type,\r\n            employee_number,\r\n            company_name as user_companyname,\r\n            TIME_ZONE_SID_KEY\r\n       from account_user ) as account_user\r\n        on account.account_owner_id = account_user.user_id", "compiled": true, "database": "FIVETRAN_DATABASE", "schema": "dbt_dataflo_staging", "fqn": ["FivetranDbt_Transformation", "intermediate", "inter_sf_account_user"], "unique_id": "model.FivetranDbt_Transformation.inter_sf_account_user", "package_name": "FivetranDbt_Transformation", "root_path": "/usr/src/develop/user-10139/environment-12915/repository-10542", "path": "intermediate/inter_sf_account_user.sql", "original_file_path": "models/intermediate/inter_sf_account_user.sql", "name": "inter_sf_account_user", "resource_type": "model", "alias": "inter_sf_account_user", "checksum": {"name": "sha256", "checksum": "2287141a635e43ce97029e413c79ab14bad1a4d2c71e86b31cb238d2d56d9773"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_sf_account"], ["stg_sf_user"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.FivetranDbt_Transformation.stg_sf_account", "model.FivetranDbt_Transformation.stg_sf_user"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/FivetranDbt_Transformation/models/intermediate/inter_sf_account_user.sql", "deferred": false, "compiled_sql": "--Dimension table account & user join\nwith account as (\n\n    SELECT * FROM FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_account\n),account_user as(\n    SELECT * FROM FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_user\n)\n\nSELECT \n    account_user.*,\n    account_id,\n    account_name,\n    -- keys\n    parent_id,\n    account_owner_id,\n    -- logistics\n    account_type, \n    account_number\n    \n    \n    FROM account\n    LEFT JOIN \n        (select \n            user_id,\n            username,\n            user_type,\n            employee_number,\n            company_name as user_companyname,\n            TIME_ZONE_SID_KEY\n       from account_user ) as account_user\n        on account.account_owner_id = account_user.user_id", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "--Dimension table account & user join\nwith account as (\n\n    SELECT * FROM FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_account\n),account_user as(\n    SELECT * FROM FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_user\n)\n\nSELECT \n    account_user.*,\n    account_id,\n    account_name,\n    -- keys\n    parent_id,\n    account_owner_id,\n    -- logistics\n    account_type, \n    account_number\n    \n    \n    FROM account\n    LEFT JOIN \n        (select \n            user_id,\n            username,\n            user_type,\n            employee_number,\n            company_name as user_companyname,\n            TIME_ZONE_SID_KEY\n       from account_user ) as account_user\n        on account.account_owner_id = account_user.user_id"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.9718761444091797, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T11:16:02.569502Z", "completed_at": "2020-11-06T11:16:02.597552Z"}, {"name": "execute", "started_at": "2020-11-06T11:16:02.598108Z", "completed_at": "2020-11-06T11:16:03.462742Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "--Fact table for DataFlo aggrigate metrics\r\n\r\nWITH opportunity AS (\r\n\r\n    select * from  {{ ref('stg_sf_opportunity') }}    \r\n\r\n), salesforce_user as (\r\n\r\n    select * from {{ ref('stg_sf_user') }}\r\n  \r\n),account as (\r\n\r\n    select * from {{ ref('stg_sf_account') }}\r\n  \r\n),created_this_month_quarter AS(\r\n    select\r\n      opportunity_owner_id,\r\n      opportunity_manager.user_id as opportunity_manager_id,\r\n      account.account_id as account_id,\r\n      opportunity.amount,\r\n      opportunity.days_to_close,\r\n      probability,\r\n      days_since_created,\r\n      case\r\n        when opportunity.is_won then 'Won'\r\n        when not opportunity.is_won and opportunity.is_closed then 'Lost'\r\n        when not opportunity.is_closed and lower(opportunity.forecast_category) in ('pipeline','forecast','bestcase') then 'Pipeline'\r\n        else 'Other'\r\n      end as status,\r\n      month(close_date) as closed_month,\r\n      case when is_created_this_month then amount else 0 end as created_amount_this_month,\r\n      case when is_created_this_quarter then amount else 0 end as created_amount_this_quarter,\r\n      case when is_created_this_month then 1 else 0 end as created_count_this_month,\r\n      case when is_created_this_quarter then 1 else 0 end as created_count_this_quarter,\r\n      case when is_closed_this_month then amount else 0 end as closed_amount_this_month,\r\n      case when is_closed_this_quarter then amount else 0 end as closed_amount_this_quarter,\r\n      case when is_closed_this_month then 1 else 0 end as closed_count_this_month,\r\n      case when is_closed_this_quarter then 1 else 0 end as closed_count_this_quarter\r\n\r\n    from opportunity  \r\n    left join account on opportunity.opportunity_account_id = account.account_id\r\n    left join salesforce_user as opportunity_owner on opportunity.opportunity_owner_id = opportunity_owner.user_id\r\n    left join salesforce_user as opportunity_manager on opportunity_owner.manager_id = opportunity_manager.user_id\r\n    where opportunity.opportunity_owner_id is not null\r\n\r\n), won_by_owner as (\r\n\r\n  select \r\n    opportunity_manager_id as won_manager_id,\r\n    opportunity_owner_id as won_owner_id,\r\n    round(sum(closed_amount_this_month)) as won_amount_closed_this_month,\r\n    round(sum(closed_amount_this_quarter)) as won_amount_closed_this_quarter,\r\n    count(*) as total_number_won,\r\n    round(sum(amount)) as total_won_amount,\r\n    round(avg(amount)) as avg_won_amount,\r\n    max(amount) as max_won_amount,\r\n    min(amount) as min_won_amount,\r\n    sum(closed_count_this_month) as won_count_closed_this_month,\r\n    sum(closed_count_this_quarter) as won_count_closed_this_quarter,\r\n    avg(days_to_close) as avg_days_to_close_won\r\n  from created_this_month_quarter\r\n  where status = 'Won' and opportunity_owner_id is not null\r\n  group by 1, 2\r\n\r\n), lost_by_owner as (\r\n\r\n  select \r\n    opportunity_manager_id as lost_manager_id,\r\n    opportunity_owner_id as lost_owner_id,\r\n    round(sum(closed_amount_this_month)) as lost_amount_this_month,\r\n    round(sum(closed_amount_this_quarter)) as lost_amount_this_quarter,\r\n    count(*) as total_number_lost,\r\n    round(sum(amount)) as total_lost_amount,\r\n    max(amount) as max_lost_amount,\r\n    min(amount) as min_lost_amount,\r\n    sum(closed_count_this_month) as lost_count_this_month,\r\n    sum(closed_count_this_quarter) as lost_count_this_quarter\r\n  from created_this_month_quarter\r\n  where status = 'Lost' and opportunity_owner_id is not null\r\n  group by 1, 2\r\n\r\n), pipeline_by_owner as (\r\n\r\n  select \r\n    opportunity_manager_id as p_manager_id,\r\n    opportunity_owner_id as p_owner_id,\r\n    round(sum(created_amount_this_month)) as pipeline_created_amount_this_month,\r\n    round(sum(created_amount_this_quarter)) as pipeline_created_amount_this_quarter,\r\n    round(sum(created_amount_this_month * probability)) as pipeline_created_forecast_amount_this_month,\r\n    round(sum(created_amount_this_quarter * probability)) as pipeline_created_forecast_amount_this_quarter,\r\n    sum(created_count_this_month) as pipeline_count_created_this_month,\r\n    sum(created_count_this_quarter) as pipeline_count_created_this_quarter,\r\n    count(*) as total_number_pipeline,\r\n    round(sum(amount)) as total_pipeline_amount,\r\n    round(sum(amount * probability)) as total_pipeline_forecast_amount,\r\n    round(avg(amount)) as avg_pipeline_opp_amount,\r\n    max(amount) as largest_deal_in_pipeline,\r\n    avg(days_since_created) as avg_days_open\r\n  from created_this_month_quarter\r\n  where status = 'Pipeline' and opportunity_owner_id is not null\r\n  group by 1, 2\r\n)\r\n\r\nselect \r\n  --salesforce_user.user_id as owner_id,\r\n  coalesce(won_owner_id, lost_owner_id, p_owner_id) as opp_owner_id,\r\n  coalesce(p_manager_id, won_manager_id, lost_manager_id) as manager_id,\r\n  won_by_owner.*,\r\n  lost_by_owner.*,\r\n  pipeline_by_owner.*\r\nfrom salesforce_user\r\nleft join won_by_owner on won_by_owner.won_owner_id = salesforce_user.user_id\r\nleft join lost_by_owner on lost_by_owner.lost_owner_id = salesforce_user.user_id\r\nleft join pipeline_by_owner on pipeline_by_owner.p_owner_id = salesforce_user.user_id\r\n\r\nwhere won_owner_id is not null", "compiled": true, "database": "FIVETRAN_DATABASE", "schema": "dbt_dataflo_staging", "fqn": ["FivetranDbt_Transformation", "intermediate", "inter_sf_aggrigate"], "unique_id": "model.FivetranDbt_Transformation.inter_sf_aggrigate", "package_name": "FivetranDbt_Transformation", "root_path": "/usr/src/develop/user-10139/environment-12915/repository-10542", "path": "intermediate/inter_sf_aggrigate.sql", "original_file_path": "models/intermediate/inter_sf_aggrigate.sql", "name": "inter_sf_aggrigate", "resource_type": "model", "alias": "inter_sf_aggrigate", "checksum": {"name": "sha256", "checksum": "34dbd1e956d4325ffcde4dad4c328c035ddaa62fff5381dac8bc66d8c758de02"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_sf_opportunity"], ["stg_sf_user"], ["stg_sf_account"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.FivetranDbt_Transformation.stg_sf_opportunity", "model.FivetranDbt_Transformation.stg_sf_user", "model.FivetranDbt_Transformation.stg_sf_account"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/FivetranDbt_Transformation/models/intermediate/inter_sf_aggrigate.sql", "deferred": false, "compiled_sql": "--Fact table for DataFlo aggrigate metrics\n\nWITH opportunity AS (\n\n    select * from  FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_opportunity    \n\n), salesforce_user as (\n\n    select * from FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_user\n  \n),account as (\n\n    select * from FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_account\n  \n),created_this_month_quarter AS(\n    select\n      opportunity_owner_id,\n      opportunity_manager.user_id as opportunity_manager_id,\n      account.account_id as account_id,\n      opportunity.amount,\n      opportunity.days_to_close,\n      probability,\n      days_since_created,\n      case\n        when opportunity.is_won then 'Won'\n        when not opportunity.is_won and opportunity.is_closed then 'Lost'\n        when not opportunity.is_closed and lower(opportunity.forecast_category) in ('pipeline','forecast','bestcase') then 'Pipeline'\n        else 'Other'\n      end as status,\n      month(close_date) as closed_month,\n      case when is_created_this_month then amount else 0 end as created_amount_this_month,\n      case when is_created_this_quarter then amount else 0 end as created_amount_this_quarter,\n      case when is_created_this_month then 1 else 0 end as created_count_this_month,\n      case when is_created_this_quarter then 1 else 0 end as created_count_this_quarter,\n      case when is_closed_this_month then amount else 0 end as closed_amount_this_month,\n      case when is_closed_this_quarter then amount else 0 end as closed_amount_this_quarter,\n      case when is_closed_this_month then 1 else 0 end as closed_count_this_month,\n      case when is_closed_this_quarter then 1 else 0 end as closed_count_this_quarter\n\n    from opportunity  \n    left join account on opportunity.opportunity_account_id = account.account_id\n    left join salesforce_user as opportunity_owner on opportunity.opportunity_owner_id = opportunity_owner.user_id\n    left join salesforce_user as opportunity_manager on opportunity_owner.manager_id = opportunity_manager.user_id\n    where opportunity.opportunity_owner_id is not null\n\n), won_by_owner as (\n\n  select \n    opportunity_manager_id as won_manager_id,\n    opportunity_owner_id as won_owner_id,\n    round(sum(closed_amount_this_month)) as won_amount_closed_this_month,\n    round(sum(closed_amount_this_quarter)) as won_amount_closed_this_quarter,\n    count(*) as total_number_won,\n    round(sum(amount)) as total_won_amount,\n    round(avg(amount)) as avg_won_amount,\n    max(amount) as max_won_amount,\n    min(amount) as min_won_amount,\n    sum(closed_count_this_month) as won_count_closed_this_month,\n    sum(closed_count_this_quarter) as won_count_closed_this_quarter,\n    avg(days_to_close) as avg_days_to_close_won\n  from created_this_month_quarter\n  where status = 'Won' and opportunity_owner_id is not null\n  group by 1, 2\n\n), lost_by_owner as (\n\n  select \n    opportunity_manager_id as lost_manager_id,\n    opportunity_owner_id as lost_owner_id,\n    round(sum(closed_amount_this_month)) as lost_amount_this_month,\n    round(sum(closed_amount_this_quarter)) as lost_amount_this_quarter,\n    count(*) as total_number_lost,\n    round(sum(amount)) as total_lost_amount,\n    max(amount) as max_lost_amount,\n    min(amount) as min_lost_amount,\n    sum(closed_count_this_month) as lost_count_this_month,\n    sum(closed_count_this_quarter) as lost_count_this_quarter\n  from created_this_month_quarter\n  where status = 'Lost' and opportunity_owner_id is not null\n  group by 1, 2\n\n), pipeline_by_owner as (\n\n  select \n    opportunity_manager_id as p_manager_id,\n    opportunity_owner_id as p_owner_id,\n    round(sum(created_amount_this_month)) as pipeline_created_amount_this_month,\n    round(sum(created_amount_this_quarter)) as pipeline_created_amount_this_quarter,\n    round(sum(created_amount_this_month * probability)) as pipeline_created_forecast_amount_this_month,\n    round(sum(created_amount_this_quarter * probability)) as pipeline_created_forecast_amount_this_quarter,\n    sum(created_count_this_month) as pipeline_count_created_this_month,\n    sum(created_count_this_quarter) as pipeline_count_created_this_quarter,\n    count(*) as total_number_pipeline,\n    round(sum(amount)) as total_pipeline_amount,\n    round(sum(amount * probability)) as total_pipeline_forecast_amount,\n    round(avg(amount)) as avg_pipeline_opp_amount,\n    max(amount) as largest_deal_in_pipeline,\n    avg(days_since_created) as avg_days_open\n  from created_this_month_quarter\n  where status = 'Pipeline' and opportunity_owner_id is not null\n  group by 1, 2\n)\n\nselect \n  --salesforce_user.user_id as owner_id,\n  coalesce(won_owner_id, lost_owner_id, p_owner_id) as opp_owner_id,\n  coalesce(p_manager_id, won_manager_id, lost_manager_id) as manager_id,\n  won_by_owner.*,\n  lost_by_owner.*,\n  pipeline_by_owner.*\nfrom salesforce_user\nleft join won_by_owner on won_by_owner.won_owner_id = salesforce_user.user_id\nleft join lost_by_owner on lost_by_owner.lost_owner_id = salesforce_user.user_id\nleft join pipeline_by_owner on pipeline_by_owner.p_owner_id = salesforce_user.user_id\n\nwhere won_owner_id is not null", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "--Fact table for DataFlo aggrigate metrics\n\nWITH opportunity AS (\n\n    select * from  FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_opportunity    \n\n), salesforce_user as (\n\n    select * from FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_user\n  \n),account as (\n\n    select * from FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_account\n  \n),created_this_month_quarter AS(\n    select\n      opportunity_owner_id,\n      opportunity_manager.user_id as opportunity_manager_id,\n      account.account_id as account_id,\n      opportunity.amount,\n      opportunity.days_to_close,\n      probability,\n      days_since_created,\n      case\n        when opportunity.is_won then 'Won'\n        when not opportunity.is_won and opportunity.is_closed then 'Lost'\n        when not opportunity.is_closed and lower(opportunity.forecast_category) in ('pipeline','forecast','bestcase') then 'Pipeline'\n        else 'Other'\n      end as status,\n      month(close_date) as closed_month,\n      case when is_created_this_month then amount else 0 end as created_amount_this_month,\n      case when is_created_this_quarter then amount else 0 end as created_amount_this_quarter,\n      case when is_created_this_month then 1 else 0 end as created_count_this_month,\n      case when is_created_this_quarter then 1 else 0 end as created_count_this_quarter,\n      case when is_closed_this_month then amount else 0 end as closed_amount_this_month,\n      case when is_closed_this_quarter then amount else 0 end as closed_amount_this_quarter,\n      case when is_closed_this_month then 1 else 0 end as closed_count_this_month,\n      case when is_closed_this_quarter then 1 else 0 end as closed_count_this_quarter\n\n    from opportunity  \n    left join account on opportunity.opportunity_account_id = account.account_id\n    left join salesforce_user as opportunity_owner on opportunity.opportunity_owner_id = opportunity_owner.user_id\n    left join salesforce_user as opportunity_manager on opportunity_owner.manager_id = opportunity_manager.user_id\n    where opportunity.opportunity_owner_id is not null\n\n), won_by_owner as (\n\n  select \n    opportunity_manager_id as won_manager_id,\n    opportunity_owner_id as won_owner_id,\n    round(sum(closed_amount_this_month)) as won_amount_closed_this_month,\n    round(sum(closed_amount_this_quarter)) as won_amount_closed_this_quarter,\n    count(*) as total_number_won,\n    round(sum(amount)) as total_won_amount,\n    round(avg(amount)) as avg_won_amount,\n    max(amount) as max_won_amount,\n    min(amount) as min_won_amount,\n    sum(closed_count_this_month) as won_count_closed_this_month,\n    sum(closed_count_this_quarter) as won_count_closed_this_quarter,\n    avg(days_to_close) as avg_days_to_close_won\n  from created_this_month_quarter\n  where status = 'Won' and opportunity_owner_id is not null\n  group by 1, 2\n\n), lost_by_owner as (\n\n  select \n    opportunity_manager_id as lost_manager_id,\n    opportunity_owner_id as lost_owner_id,\n    round(sum(closed_amount_this_month)) as lost_amount_this_month,\n    round(sum(closed_amount_this_quarter)) as lost_amount_this_quarter,\n    count(*) as total_number_lost,\n    round(sum(amount)) as total_lost_amount,\n    max(amount) as max_lost_amount,\n    min(amount) as min_lost_amount,\n    sum(closed_count_this_month) as lost_count_this_month,\n    sum(closed_count_this_quarter) as lost_count_this_quarter\n  from created_this_month_quarter\n  where status = 'Lost' and opportunity_owner_id is not null\n  group by 1, 2\n\n), pipeline_by_owner as (\n\n  select \n    opportunity_manager_id as p_manager_id,\n    opportunity_owner_id as p_owner_id,\n    round(sum(created_amount_this_month)) as pipeline_created_amount_this_month,\n    round(sum(created_amount_this_quarter)) as pipeline_created_amount_this_quarter,\n    round(sum(created_amount_this_month * probability)) as pipeline_created_forecast_amount_this_month,\n    round(sum(created_amount_this_quarter * probability)) as pipeline_created_forecast_amount_this_quarter,\n    sum(created_count_this_month) as pipeline_count_created_this_month,\n    sum(created_count_this_quarter) as pipeline_count_created_this_quarter,\n    count(*) as total_number_pipeline,\n    round(sum(amount)) as total_pipeline_amount,\n    round(sum(amount * probability)) as total_pipeline_forecast_amount,\n    round(avg(amount)) as avg_pipeline_opp_amount,\n    max(amount) as largest_deal_in_pipeline,\n    avg(days_since_created) as avg_days_open\n  from created_this_month_quarter\n  where status = 'Pipeline' and opportunity_owner_id is not null\n  group by 1, 2\n)\n\nselect \n  --salesforce_user.user_id as owner_id,\n  coalesce(won_owner_id, lost_owner_id, p_owner_id) as opp_owner_id,\n  coalesce(p_manager_id, won_manager_id, lost_manager_id) as manager_id,\n  won_by_owner.*,\n  lost_by_owner.*,\n  pipeline_by_owner.*\nfrom salesforce_user\nleft join won_by_owner on won_by_owner.won_owner_id = salesforce_user.user_id\nleft join lost_by_owner on lost_by_owner.lost_owner_id = salesforce_user.user_id\nleft join pipeline_by_owner on pipeline_by_owner.p_owner_id = salesforce_user.user_id\n\nwhere won_owner_id is not null"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.7732980251312256, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T11:16:03.544374Z", "completed_at": "2020-11-06T11:16:03.644811Z"}, {"name": "execute", "started_at": "2020-11-06T11:16:03.645263Z", "completed_at": "2020-11-06T11:16:05.197471Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "--Dimension table for lead & opportunity join \r\nWITH leads as (\r\n        select * from  {{ ref('stg_sf_lead') }}\r\n    ),opport as (\r\n        select * from  {{ ref('stg_sf_opportunity') }}    \r\n    ),opportunity_lead as (\r\n\r\n     select\r\n        leads.*,\r\n        opportunity_id,\r\n        opportunity_owner_id,\r\n        opportunity_type,\r\n        fiscal_yq,\r\n        fiscal_year,\r\n        fiscal_quarter,\r\n        probability,\r\n        next_step,\r\n        has_open_activity,\r\n        stage_name,\r\n        forecast_category,\r\n        forecast_category_name,\r\n        campaign_id,\r\n        is_won,\r\n        is_closed,\r\n        close_date,\r\n        has_overdue_task,\r\n        expected_revenue,\r\n        total_opportunity_quantity,\r\n        delivery_installation_status,\r\n        order_number,\r\n        current_generators,\r\n        main_competitors,\r\n        -- accounting\r\n        amount,\r\n        case\r\n        when opportunity.is_won then 'Won'\r\n        when not opportunity.is_won and opportunity.is_closed then 'Lost'\r\n        when not opportunity.is_closed and lower(opportunity.forecast_category) in ('pipeline','forecast','bestcase') then 'Pipeline'\r\n        else 'Other' end as opportunity_status,\r\n        \r\n        created_at as opportunity_created_at,\r\n        updated_at as opportunity_updated_at\r\n\r\n      from opport as opportunity\r\n        LEFT JOIN \r\n        (select \r\n            lead_owner_id,lead_id,\r\n            lead_source,\r\n            status as lead_status ,\r\n            full_name as lead_fullname,\r\n            company_name as lead_companyname\r\n       from leads ) as leads\r\n        on opportunity.opportunity_owner_id = leads.lead_owner_id\r\n\r\n    )\r\n\r\nselect * from opportunity_lead", "compiled": true, "database": "FIVETRAN_DATABASE", "schema": "dbt_dataflo_staging", "fqn": ["FivetranDbt_Transformation", "intermediate", "inter_sf_opportunity_leads"], "unique_id": "model.FivetranDbt_Transformation.inter_sf_opportunity_leads", "package_name": "FivetranDbt_Transformation", "root_path": "/usr/src/develop/user-10139/environment-12915/repository-10542", "path": "intermediate/inter_sf_opportunity_leads.sql", "original_file_path": "models/intermediate/inter_sf_opportunity_leads.sql", "name": "inter_sf_opportunity_leads", "resource_type": "model", "alias": "inter_sf_opportunity_leads", "checksum": {"name": "sha256", "checksum": "cd57f8871a61bb268bc76756035aa8f923f173599c348c9a74b943eb58eb485c"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_sf_lead"], ["stg_sf_opportunity"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.FivetranDbt_Transformation.stg_sf_lead", "model.FivetranDbt_Transformation.stg_sf_opportunity"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/FivetranDbt_Transformation/models/intermediate/inter_sf_opportunity_leads.sql", "deferred": false, "compiled_sql": "--Dimension table for lead & opportunity join \nWITH leads as (\n        select * from  FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_lead\n    ),opport as (\n        select * from  FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_opportunity    \n    ),opportunity_lead as (\n\n     select\n        leads.*,\n        opportunity_id,\n        opportunity_owner_id,\n        opportunity_type,\n        fiscal_yq,\n        fiscal_year,\n        fiscal_quarter,\n        probability,\n        next_step,\n        has_open_activity,\n        stage_name,\n        forecast_category,\n        forecast_category_name,\n        campaign_id,\n        is_won,\n        is_closed,\n        close_date,\n        has_overdue_task,\n        expected_revenue,\n        total_opportunity_quantity,\n        delivery_installation_status,\n        order_number,\n        current_generators,\n        main_competitors,\n        -- accounting\n        amount,\n        case\n        when opportunity.is_won then 'Won'\n        when not opportunity.is_won and opportunity.is_closed then 'Lost'\n        when not opportunity.is_closed and lower(opportunity.forecast_category) in ('pipeline','forecast','bestcase') then 'Pipeline'\n        else 'Other' end as opportunity_status,\n        \n        created_at as opportunity_created_at,\n        updated_at as opportunity_updated_at\n\n      from opport as opportunity\n        LEFT JOIN \n        (select \n            lead_owner_id,lead_id,\n            lead_source,\n            status as lead_status ,\n            full_name as lead_fullname,\n            company_name as lead_companyname\n       from leads ) as leads\n        on opportunity.opportunity_owner_id = leads.lead_owner_id\n\n    )\n\nselect * from opportunity_lead", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "--Dimension table for lead & opportunity join \nWITH leads as (\n        select * from  FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_lead\n    ),opport as (\n        select * from  FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_opportunity    \n    ),opportunity_lead as (\n\n     select\n        leads.*,\n        opportunity_id,\n        opportunity_owner_id,\n        opportunity_type,\n        fiscal_yq,\n        fiscal_year,\n        fiscal_quarter,\n        probability,\n        next_step,\n        has_open_activity,\n        stage_name,\n        forecast_category,\n        forecast_category_name,\n        campaign_id,\n        is_won,\n        is_closed,\n        close_date,\n        has_overdue_task,\n        expected_revenue,\n        total_opportunity_quantity,\n        delivery_installation_status,\n        order_number,\n        current_generators,\n        main_competitors,\n        -- accounting\n        amount,\n        case\n        when opportunity.is_won then 'Won'\n        when not opportunity.is_won and opportunity.is_closed then 'Lost'\n        when not opportunity.is_closed and lower(opportunity.forecast_category) in ('pipeline','forecast','bestcase') then 'Pipeline'\n        else 'Other' end as opportunity_status,\n        \n        created_at as opportunity_created_at,\n        updated_at as opportunity_updated_at\n\n      from opport as opportunity\n        LEFT JOIN \n        (select \n            lead_owner_id,lead_id,\n            lead_source,\n            status as lead_status ,\n            full_name as lead_fullname,\n            company_name as lead_companyname\n       from leads ) as leads\n        on opportunity.opportunity_owner_id = leads.lead_owner_id\n\n    )\n\nselect * from opportunity_lead"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.0725986957550049, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T11:16:05.320788Z", "completed_at": "2020-11-06T11:16:05.346157Z"}, {"name": "execute", "started_at": "2020-11-06T11:16:05.346673Z", "completed_at": "2020-11-06T11:16:06.327320Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with aq_overview as (\r\n\r\n    SELECT * FROM {{ ref('stg_ga_aq_overview') }}\r\n),aud_geoloc as(\r\n    SELECT * FROM {{ ref('stg_ga_aud_geoloc') }}\r\n),audi_overview as(\r\n    SELECT * FROM {{ ref('stg_ga_audi_overview') }}\r\n),audi_techno as(\r\n    SELECT * FROM {{ ref('stg_ga_audi_techno') }}\r\n)\r\n\r\nSELECT \r\n    aq_overview.*,\r\n    aud_geoloc.*,\r\n    audi_overview.*,\r\n    audi_techno.*\r\n    \r\n from aq_overview \r\nleft join aud_geoloc on aq_overview.ACQU_ACCOUNT_ID=aud_geoloc.AUD_GEOLOC_ACCOUNT_ID\r\nleft join audi_overview on aq_overview.ACQU_ACCOUNT_ID=audi_overview.AUD_OVERVIEW_ACCOUNT_ID\r\nleft join audi_techno on aq_overview.ACQU_ACCOUNT_ID=audi_techno.AUD_TECH_ACCOUNT_ID", "compiled": true, "database": "FIVETRAN_DATABASE", "schema": "dbt_dataflo_staging", "fqn": ["FivetranDbt_Transformation", "intermediate", "ga_inter", "inter_detail_ga"], "unique_id": "model.FivetranDbt_Transformation.inter_detail_ga", "package_name": "FivetranDbt_Transformation", "root_path": "/usr/src/develop/user-10139/environment-12915/repository-10542", "path": "intermediate/ga_inter/inter_detail_ga.sql", "original_file_path": "models/intermediate/ga_inter/inter_detail_ga.sql", "name": "inter_detail_ga", "resource_type": "model", "alias": "inter_detail_ga", "checksum": {"name": "sha256", "checksum": "7a9325fa49c764b90670a2c972a94299a71b393682d09c0c479074a28e772b8d"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_ga_aq_overview"], ["stg_ga_aud_geoloc"], ["stg_ga_audi_overview"], ["stg_ga_audi_techno"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.FivetranDbt_Transformation.stg_ga_aq_overview", "model.FivetranDbt_Transformation.stg_ga_aud_geoloc", "model.FivetranDbt_Transformation.stg_ga_audi_overview", "model.FivetranDbt_Transformation.stg_ga_audi_techno"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/FivetranDbt_Transformation/models/intermediate/ga_inter/inter_detail_ga.sql", "deferred": false, "compiled_sql": "with aq_overview as (\n\n    SELECT * FROM FIVETRAN_DATABASE.dbt_dataflo_staging.stg_ga_aq_overview\n),aud_geoloc as(\n    SELECT * FROM FIVETRAN_DATABASE.dbt_dataflo_staging.stg_ga_aud_geoloc\n),audi_overview as(\n    SELECT * FROM FIVETRAN_DATABASE.dbt_dataflo_staging.stg_ga_audi_overview\n),audi_techno as(\n    SELECT * FROM FIVETRAN_DATABASE.dbt_dataflo_staging.stg_ga_audi_techno\n)\n\nSELECT \n    aq_overview.*,\n    aud_geoloc.*,\n    audi_overview.*,\n    audi_techno.*\n    \n from aq_overview \nleft join aud_geoloc on aq_overview.ACQU_ACCOUNT_ID=aud_geoloc.AUD_GEOLOC_ACCOUNT_ID\nleft join audi_overview on aq_overview.ACQU_ACCOUNT_ID=audi_overview.AUD_OVERVIEW_ACCOUNT_ID\nleft join audi_techno on aq_overview.ACQU_ACCOUNT_ID=audi_techno.AUD_TECH_ACCOUNT_ID", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with aq_overview as (\n\n    SELECT * FROM FIVETRAN_DATABASE.dbt_dataflo_staging.stg_ga_aq_overview\n),aud_geoloc as(\n    SELECT * FROM FIVETRAN_DATABASE.dbt_dataflo_staging.stg_ga_aud_geoloc\n),audi_overview as(\n    SELECT * FROM FIVETRAN_DATABASE.dbt_dataflo_staging.stg_ga_audi_overview\n),audi_techno as(\n    SELECT * FROM FIVETRAN_DATABASE.dbt_dataflo_staging.stg_ga_audi_techno\n)\n\nSELECT \n    aq_overview.*,\n    aud_geoloc.*,\n    audi_overview.*,\n    audi_techno.*\n    \n from aq_overview \nleft join aud_geoloc on aq_overview.ACQU_ACCOUNT_ID=aud_geoloc.AUD_GEOLOC_ACCOUNT_ID\nleft join audi_overview on aq_overview.ACQU_ACCOUNT_ID=audi_overview.AUD_OVERVIEW_ACCOUNT_ID\nleft join audi_techno on aq_overview.ACQU_ACCOUNT_ID=audi_techno.AUD_TECH_ACCOUNT_ID"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.0751533508300781, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T11:16:06.396347Z", "completed_at": "2020-11-06T11:16:06.423784Z"}, {"name": "execute", "started_at": "2020-11-06T11:16:06.424094Z", "completed_at": "2020-11-06T11:16:07.355031Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "--Fact table for DataFlo metrics\r\n\r\nWITH account AS (\r\n\r\n    select * from  {{ ref('stg_sf_account') }} \r\n\r\n    ),users as (\r\n        select * from  {{ ref('stg_sf_user') }} \r\n    ),contact as (\r\n        select * from  {{ ref('stg_sf_contact') }} \r\n        \r\n    ),leads as (\r\n        select * from  {{ ref('stg_sf_lead') }} \r\n    ),opport as (\r\n        select * from  {{ ref('stg_sf_opportunity') }}   \r\n),account_metric as (\r\n\r\n    SELECT \r\n    opport.opportunity_owner_id,\r\n    --users.USERNAME,\r\n    acctname.Accounts,\r\n    acctype.Accounts_by_Type,\r\n    contact.Contacts,\r\n    leads.Leads,\r\n    leadstatus.Leads_by_status,\r\n    lastweekleads.Leadsbylocationlast7days,\r\n    opports.Opportunities_this_quarter,\r\n    opport_by_type.Opportunities_by_type,\r\n    opport_won.Opportunities_Won_Revenue,\r\n    convert_lead.Converted_Leads,\r\n    new_lead.New_Leads, \r\n    open_opport.Open_Opportunity_by_stage,\r\n    lead_industry.NewLeads_by_industry,\r\n    lost_opport.Opportunities_Lost,\r\n    lost_amount_opport.OpportunitiesLost_Amount_by_Owner,\r\n    lost_amount_opport_by_OppName.OpportunitiesLost_Amount_by_Opp_Name,\r\n    won_opport.Opportunities_Won,\r\n    won_amount_opport_by_OppName.OpportunitiesWon_Amount_by_Opp_Name,\r\n\r\n    opp_amount_agg.max_amount,\r\n    opp_amount_agg.min_amount, \r\n    opp_amount_agg.total_amount\r\n\r\n\r\n    FROM users\r\n    LEFT JOIN (select account_owner_id,COUNT(account_name) as Accounts from account\r\n     WHERE account_name is not null  \r\n     group by account_owner_id) as acctname\r\n    on users.user_id= acctname.account_owner_id\r\n\r\n    LEFT JOIN (select account_owner_id,COUNT(account_type) as Accounts_by_Type from account\r\n     WHERE account_type is not null  \r\n     group by account_owner_id) as acctype\r\n    on users.user_id= acctype.account_owner_id\r\n\r\n    LEFT JOIN (select contact_owner_id, COUNT(contact_name) as Contacts from contact\r\n     WHERE contact_name is not null  \r\n     group by contact_owner_id) as contact\r\n    on users.user_id= contact.contact_owner_id\r\n\r\n    LEFT JOIN (select lead_owner_id, COUNT(full_name) as Leads from leads\r\n     WHERE full_name is not null  \r\n     group by lead_owner_id) as leads\r\n    on users.user_id= leads.lead_owner_id\r\n   --Leads by location -pending\r\n    LEFT JOIN (select lead_owner_id, COUNT(country) as Leadsbylocationlast7days from leads\r\n     WHERE full_name is not null  and DATEADD(DD,-7,GETDATE())\r\n     group by lead_owner_id) as lastweekleads\r\n    on users.user_id= leads.lead_owner_id\r\n\r\n    LEFT JOIN (select lead_owner_id, COUNT(status) as Leads_by_status from leads\r\n     WHERE status is not null  \r\n     group by lead_owner_id) as leadstatus\r\n    on users.user_id= leadstatus.lead_owner_id\r\n\r\n    LEFT JOIN (select opportunity_owner_id from opport\r\n     WHERE company_name is not null) as opport\r\n    on users.user_id= opport.opportunity_owner_id\r\n\r\n    LEFT JOIN (select opportunity_owner_id, \r\n    COALESCE(sum(CASE WHEN is_created_this_quarter THEN 1 ELSE 0 END),0) as Opportunities_this_quarter from opport\r\n     WHERE company_name is not null \r\n     group by opportunity_owner_id) as opports\r\n    on users.user_id= opports.opportunity_owner_id\r\n\r\n    LEFT JOIN (select opportunity_owner_id, COUNT(opportunity_type) as Opportunities_by_type from opport\r\n     WHERE opportunity_type is not null  \r\n     group by opportunity_owner_id) as opport_by_type\r\n    on users.user_id= opport_by_type.opportunity_owner_id\r\n\r\n    LEFT JOIN (select opportunity_owner_id, sum(amount) as Opportunities_Won_Revenue from opport\r\n     WHERE stage_name is not null  and stage_name='Closed Won'\r\n     group by opportunity_owner_id) as opport_won\r\n    on users.user_id= opport_won.opportunity_owner_id\r\n    --Key Metrics-pending\r\n\r\n    LEFT JOIN (select lead_owner_id, COUNT(status) as Converted_Leads from leads\r\n     WHERE status is not null  and is_converted='true'\r\n     group by lead_owner_id) as convert_lead\r\n    on users.user_id= convert_lead.lead_owner_id\r\n    \r\n    LEFT JOIN (select lead_owner_id, COUNT(full_name) as New_Leads from leads\r\n     WHERE full_name is not null  \r\n     group by lead_owner_id) as new_lead\r\n    on users.user_id= new_lead.lead_owner_id\r\n    \r\n    LEFT JOIN (select opportunity_owner_id, COUNT(stage_name) as Open_Opportunity_by_stage from opport\r\n     WHERE stage_name is not null  and stage_name <> 'Closed Won'\r\n     group by opportunity_owner_id) as open_opport\r\n    on users.user_id= open_opport.opportunity_owner_id\r\n    --Top Sales Rep- pending\r\n    LEFT JOIN (select lead_owner_id, COUNT(industry) as NewLeads_by_industry from leads\r\n     WHERE industry is not null  \r\n     group by lead_owner_id) as lead_industry\r\n    on users.user_id= lead_industry.lead_owner_id\r\n   -- Return On Investment Amount by Campaign --pending\r\n   -- Return On Investment by Campaign Type --pending\r\n\r\n    LEFT JOIN (select opportunity_owner_id, count(stage_name) as Opportunities_Lost from opport\r\n     WHERE stage_name is not null  and stage_name = 'Closed lost'\r\n     group by opportunity_owner_id) as lost_opport\r\n    on users.user_id= lost_opport.opportunity_owner_id\r\n    \r\n    LEFT JOIN (select opportunity_owner_id, sum(amount) as OpportunitiesLost_Amount_by_Owner from opport\r\n     WHERE stage_name is not null  and stage_name = 'Closed lost'\r\n     group by opportunity_owner_id) as lost_amount_opport\r\n    on users.user_id= lost_amount_opport.opportunity_owner_id\r\n    \r\n    LEFT JOIN (select opportunity_owner_id, sum(amount) as OpportunitiesLost_Amount_by_Opp_Name from opport\r\n     WHERE stage_name is not null  and stage_name = 'Closed lost'\r\n     group by 1) as lost_amount_opport_by_OppName\r\n    on users.user_id= lost_amount_opport.opportunity_owner_id\r\n   \r\n    LEFT JOIN (select opportunity_owner_id, count(stage_name) as Opportunities_Won from opport\r\n     WHERE stage_name is not null  and stage_name = 'Closed Won'\r\n     group by opportunity_owner_id) as won_opport\r\n    on users.user_id= won_opport.opportunity_owner_id\r\n\r\n    LEFT JOIN (select opportunity_owner_id,sum(amount) as OpportunitiesWon_Amount_by_Opp_Name from opport\r\n     WHERE stage_name is not null  and stage_name = 'Closed Won'\r\n     group by 1) as won_amount_opport_by_OppName\r\n    on users.user_id= won_amount_opport_by_OppName.opportunity_owner_id\r\n\r\n    LEFT JOIN (select opportunity_owner_id, MAX(Amount) as max_amount, MIN(Amount) as min_amount, SUM(Amount) as total_amount from opport\r\n     WHERE opportunity_owner_id is not null \r\n     group by 1) as opp_amount_agg\r\n    on users.user_id= opp_amount_agg.opportunity_owner_id\r\n\r\n    where users.USERNAME is not null and user_id is not null\r\n    \r\n)\r\nselect distinct *  from account_metric  where OPPORTUNITY_OWNER_ID is not null", "compiled": true, "database": "FIVETRAN_DATABASE", "schema": "dbt_dataflo_staging", "fqn": ["FivetranDbt_Transformation", "intermediate", "inter_sf_opportunity_enhanced"], "unique_id": "model.FivetranDbt_Transformation.inter_sf_opportunity_enhanced", "package_name": "FivetranDbt_Transformation", "root_path": "/usr/src/develop/user-10139/environment-12915/repository-10542", "path": "intermediate/inter_sf_opportunity_enhanced.sql", "original_file_path": "models/intermediate/inter_sf_opportunity_enhanced.sql", "name": "inter_sf_opportunity_enhanced", "resource_type": "model", "alias": "inter_sf_opportunity_enhanced", "checksum": {"name": "sha256", "checksum": "3ec303253e385ca65e537262cbe268c4f8110d1ea06a6863f1813ac8bc28cccc"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_sf_account"], ["stg_sf_user"], ["stg_sf_contact"], ["stg_sf_lead"], ["stg_sf_opportunity"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view"], "nodes": ["model.FivetranDbt_Transformation.stg_sf_account", "model.FivetranDbt_Transformation.stg_sf_user", "model.FivetranDbt_Transformation.stg_sf_contact", "model.FivetranDbt_Transformation.stg_sf_lead", "model.FivetranDbt_Transformation.stg_sf_opportunity"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/FivetranDbt_Transformation/models/intermediate/inter_sf_opportunity_enhanced.sql", "deferred": false, "compiled_sql": "--Fact table for DataFlo metrics\n\nWITH account AS (\n\n    select * from  FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_account \n\n    ),users as (\n        select * from  FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_user \n    ),contact as (\n        select * from  FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_contact \n        \n    ),leads as (\n        select * from  FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_lead \n    ),opport as (\n        select * from  FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_opportunity   \n),account_metric as (\n\n    SELECT \n    opport.opportunity_owner_id,\n    --users.USERNAME,\n    acctname.Accounts,\n    acctype.Accounts_by_Type,\n    contact.Contacts,\n    leads.Leads,\n    leadstatus.Leads_by_status,\n    lastweekleads.Leadsbylocationlast7days,\n    opports.Opportunities_this_quarter,\n    opport_by_type.Opportunities_by_type,\n    opport_won.Opportunities_Won_Revenue,\n    convert_lead.Converted_Leads,\n    new_lead.New_Leads, \n    open_opport.Open_Opportunity_by_stage,\n    lead_industry.NewLeads_by_industry,\n    lost_opport.Opportunities_Lost,\n    lost_amount_opport.OpportunitiesLost_Amount_by_Owner,\n    lost_amount_opport_by_OppName.OpportunitiesLost_Amount_by_Opp_Name,\n    won_opport.Opportunities_Won,\n    won_amount_opport_by_OppName.OpportunitiesWon_Amount_by_Opp_Name,\n\n    opp_amount_agg.max_amount,\n    opp_amount_agg.min_amount, \n    opp_amount_agg.total_amount\n\n\n    FROM users\n    LEFT JOIN (select account_owner_id,COUNT(account_name) as Accounts from account\n     WHERE account_name is not null  \n     group by account_owner_id) as acctname\n    on users.user_id= acctname.account_owner_id\n\n    LEFT JOIN (select account_owner_id,COUNT(account_type) as Accounts_by_Type from account\n     WHERE account_type is not null  \n     group by account_owner_id) as acctype\n    on users.user_id= acctype.account_owner_id\n\n    LEFT JOIN (select contact_owner_id, COUNT(contact_name) as Contacts from contact\n     WHERE contact_name is not null  \n     group by contact_owner_id) as contact\n    on users.user_id= contact.contact_owner_id\n\n    LEFT JOIN (select lead_owner_id, COUNT(full_name) as Leads from leads\n     WHERE full_name is not null  \n     group by lead_owner_id) as leads\n    on users.user_id= leads.lead_owner_id\n   --Leads by location -pending\n    LEFT JOIN (select lead_owner_id, COUNT(country) as Leadsbylocationlast7days from leads\n     WHERE full_name is not null  and DATEADD(DD,-7,GETDATE())\n     group by lead_owner_id) as lastweekleads\n    on users.user_id= leads.lead_owner_id\n\n    LEFT JOIN (select lead_owner_id, COUNT(status) as Leads_by_status from leads\n     WHERE status is not null  \n     group by lead_owner_id) as leadstatus\n    on users.user_id= leadstatus.lead_owner_id\n\n    LEFT JOIN (select opportunity_owner_id from opport\n     WHERE company_name is not null) as opport\n    on users.user_id= opport.opportunity_owner_id\n\n    LEFT JOIN (select opportunity_owner_id, \n    COALESCE(sum(CASE WHEN is_created_this_quarter THEN 1 ELSE 0 END),0) as Opportunities_this_quarter from opport\n     WHERE company_name is not null \n     group by opportunity_owner_id) as opports\n    on users.user_id= opports.opportunity_owner_id\n\n    LEFT JOIN (select opportunity_owner_id, COUNT(opportunity_type) as Opportunities_by_type from opport\n     WHERE opportunity_type is not null  \n     group by opportunity_owner_id) as opport_by_type\n    on users.user_id= opport_by_type.opportunity_owner_id\n\n    LEFT JOIN (select opportunity_owner_id, sum(amount) as Opportunities_Won_Revenue from opport\n     WHERE stage_name is not null  and stage_name='Closed Won'\n     group by opportunity_owner_id) as opport_won\n    on users.user_id= opport_won.opportunity_owner_id\n    --Key Metrics-pending\n\n    LEFT JOIN (select lead_owner_id, COUNT(status) as Converted_Leads from leads\n     WHERE status is not null  and is_converted='true'\n     group by lead_owner_id) as convert_lead\n    on users.user_id= convert_lead.lead_owner_id\n    \n    LEFT JOIN (select lead_owner_id, COUNT(full_name) as New_Leads from leads\n     WHERE full_name is not null  \n     group by lead_owner_id) as new_lead\n    on users.user_id= new_lead.lead_owner_id\n    \n    LEFT JOIN (select opportunity_owner_id, COUNT(stage_name) as Open_Opportunity_by_stage from opport\n     WHERE stage_name is not null  and stage_name <> 'Closed Won'\n     group by opportunity_owner_id) as open_opport\n    on users.user_id= open_opport.opportunity_owner_id\n    --Top Sales Rep- pending\n    LEFT JOIN (select lead_owner_id, COUNT(industry) as NewLeads_by_industry from leads\n     WHERE industry is not null  \n     group by lead_owner_id) as lead_industry\n    on users.user_id= lead_industry.lead_owner_id\n   -- Return On Investment Amount by Campaign --pending\n   -- Return On Investment by Campaign Type --pending\n\n    LEFT JOIN (select opportunity_owner_id, count(stage_name) as Opportunities_Lost from opport\n     WHERE stage_name is not null  and stage_name = 'Closed lost'\n     group by opportunity_owner_id) as lost_opport\n    on users.user_id= lost_opport.opportunity_owner_id\n    \n    LEFT JOIN (select opportunity_owner_id, sum(amount) as OpportunitiesLost_Amount_by_Owner from opport\n     WHERE stage_name is not null  and stage_name = 'Closed lost'\n     group by opportunity_owner_id) as lost_amount_opport\n    on users.user_id= lost_amount_opport.opportunity_owner_id\n    \n    LEFT JOIN (select opportunity_owner_id, sum(amount) as OpportunitiesLost_Amount_by_Opp_Name from opport\n     WHERE stage_name is not null  and stage_name = 'Closed lost'\n     group by 1) as lost_amount_opport_by_OppName\n    on users.user_id= lost_amount_opport.opportunity_owner_id\n   \n    LEFT JOIN (select opportunity_owner_id, count(stage_name) as Opportunities_Won from opport\n     WHERE stage_name is not null  and stage_name = 'Closed Won'\n     group by opportunity_owner_id) as won_opport\n    on users.user_id= won_opport.opportunity_owner_id\n\n    LEFT JOIN (select opportunity_owner_id,sum(amount) as OpportunitiesWon_Amount_by_Opp_Name from opport\n     WHERE stage_name is not null  and stage_name = 'Closed Won'\n     group by 1) as won_amount_opport_by_OppName\n    on users.user_id= won_amount_opport_by_OppName.opportunity_owner_id\n\n    LEFT JOIN (select opportunity_owner_id, MAX(Amount) as max_amount, MIN(Amount) as min_amount, SUM(Amount) as total_amount from opport\n     WHERE opportunity_owner_id is not null \n     group by 1) as opp_amount_agg\n    on users.user_id= opp_amount_agg.opportunity_owner_id\n\n    where users.USERNAME is not null and user_id is not null\n    \n)\nselect distinct *  from account_metric  where OPPORTUNITY_OWNER_ID is not null", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "--Fact table for DataFlo metrics\n\nWITH account AS (\n\n    select * from  FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_account \n\n    ),users as (\n        select * from  FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_user \n    ),contact as (\n        select * from  FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_contact \n        \n    ),leads as (\n        select * from  FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_lead \n    ),opport as (\n        select * from  FIVETRAN_DATABASE.dbt_dataflo_staging.stg_sf_opportunity   \n),account_metric as (\n\n    SELECT \n    opport.opportunity_owner_id,\n    --users.USERNAME,\n    acctname.Accounts,\n    acctype.Accounts_by_Type,\n    contact.Contacts,\n    leads.Leads,\n    leadstatus.Leads_by_status,\n    lastweekleads.Leadsbylocationlast7days,\n    opports.Opportunities_this_quarter,\n    opport_by_type.Opportunities_by_type,\n    opport_won.Opportunities_Won_Revenue,\n    convert_lead.Converted_Leads,\n    new_lead.New_Leads, \n    open_opport.Open_Opportunity_by_stage,\n    lead_industry.NewLeads_by_industry,\n    lost_opport.Opportunities_Lost,\n    lost_amount_opport.OpportunitiesLost_Amount_by_Owner,\n    lost_amount_opport_by_OppName.OpportunitiesLost_Amount_by_Opp_Name,\n    won_opport.Opportunities_Won,\n    won_amount_opport_by_OppName.OpportunitiesWon_Amount_by_Opp_Name,\n\n    opp_amount_agg.max_amount,\n    opp_amount_agg.min_amount, \n    opp_amount_agg.total_amount\n\n\n    FROM users\n    LEFT JOIN (select account_owner_id,COUNT(account_name) as Accounts from account\n     WHERE account_name is not null  \n     group by account_owner_id) as acctname\n    on users.user_id= acctname.account_owner_id\n\n    LEFT JOIN (select account_owner_id,COUNT(account_type) as Accounts_by_Type from account\n     WHERE account_type is not null  \n     group by account_owner_id) as acctype\n    on users.user_id= acctype.account_owner_id\n\n    LEFT JOIN (select contact_owner_id, COUNT(contact_name) as Contacts from contact\n     WHERE contact_name is not null  \n     group by contact_owner_id) as contact\n    on users.user_id= contact.contact_owner_id\n\n    LEFT JOIN (select lead_owner_id, COUNT(full_name) as Leads from leads\n     WHERE full_name is not null  \n     group by lead_owner_id) as leads\n    on users.user_id= leads.lead_owner_id\n   --Leads by location -pending\n    LEFT JOIN (select lead_owner_id, COUNT(country) as Leadsbylocationlast7days from leads\n     WHERE full_name is not null  and DATEADD(DD,-7,GETDATE())\n     group by lead_owner_id) as lastweekleads\n    on users.user_id= leads.lead_owner_id\n\n    LEFT JOIN (select lead_owner_id, COUNT(status) as Leads_by_status from leads\n     WHERE status is not null  \n     group by lead_owner_id) as leadstatus\n    on users.user_id= leadstatus.lead_owner_id\n\n    LEFT JOIN (select opportunity_owner_id from opport\n     WHERE company_name is not null) as opport\n    on users.user_id= opport.opportunity_owner_id\n\n    LEFT JOIN (select opportunity_owner_id, \n    COALESCE(sum(CASE WHEN is_created_this_quarter THEN 1 ELSE 0 END),0) as Opportunities_this_quarter from opport\n     WHERE company_name is not null \n     group by opportunity_owner_id) as opports\n    on users.user_id= opports.opportunity_owner_id\n\n    LEFT JOIN (select opportunity_owner_id, COUNT(opportunity_type) as Opportunities_by_type from opport\n     WHERE opportunity_type is not null  \n     group by opportunity_owner_id) as opport_by_type\n    on users.user_id= opport_by_type.opportunity_owner_id\n\n    LEFT JOIN (select opportunity_owner_id, sum(amount) as Opportunities_Won_Revenue from opport\n     WHERE stage_name is not null  and stage_name='Closed Won'\n     group by opportunity_owner_id) as opport_won\n    on users.user_id= opport_won.opportunity_owner_id\n    --Key Metrics-pending\n\n    LEFT JOIN (select lead_owner_id, COUNT(status) as Converted_Leads from leads\n     WHERE status is not null  and is_converted='true'\n     group by lead_owner_id) as convert_lead\n    on users.user_id= convert_lead.lead_owner_id\n    \n    LEFT JOIN (select lead_owner_id, COUNT(full_name) as New_Leads from leads\n     WHERE full_name is not null  \n     group by lead_owner_id) as new_lead\n    on users.user_id= new_lead.lead_owner_id\n    \n    LEFT JOIN (select opportunity_owner_id, COUNT(stage_name) as Open_Opportunity_by_stage from opport\n     WHERE stage_name is not null  and stage_name <> 'Closed Won'\n     group by opportunity_owner_id) as open_opport\n    on users.user_id= open_opport.opportunity_owner_id\n    --Top Sales Rep- pending\n    LEFT JOIN (select lead_owner_id, COUNT(industry) as NewLeads_by_industry from leads\n     WHERE industry is not null  \n     group by lead_owner_id) as lead_industry\n    on users.user_id= lead_industry.lead_owner_id\n   -- Return On Investment Amount by Campaign --pending\n   -- Return On Investment by Campaign Type --pending\n\n    LEFT JOIN (select opportunity_owner_id, count(stage_name) as Opportunities_Lost from opport\n     WHERE stage_name is not null  and stage_name = 'Closed lost'\n     group by opportunity_owner_id) as lost_opport\n    on users.user_id= lost_opport.opportunity_owner_id\n    \n    LEFT JOIN (select opportunity_owner_id, sum(amount) as OpportunitiesLost_Amount_by_Owner from opport\n     WHERE stage_name is not null  and stage_name = 'Closed lost'\n     group by opportunity_owner_id) as lost_amount_opport\n    on users.user_id= lost_amount_opport.opportunity_owner_id\n    \n    LEFT JOIN (select opportunity_owner_id, sum(amount) as OpportunitiesLost_Amount_by_Opp_Name from opport\n     WHERE stage_name is not null  and stage_name = 'Closed lost'\n     group by 1) as lost_amount_opport_by_OppName\n    on users.user_id= lost_amount_opport.opportunity_owner_id\n   \n    LEFT JOIN (select opportunity_owner_id, count(stage_name) as Opportunities_Won from opport\n     WHERE stage_name is not null  and stage_name = 'Closed Won'\n     group by opportunity_owner_id) as won_opport\n    on users.user_id= won_opport.opportunity_owner_id\n\n    LEFT JOIN (select opportunity_owner_id,sum(amount) as OpportunitiesWon_Amount_by_Opp_Name from opport\n     WHERE stage_name is not null  and stage_name = 'Closed Won'\n     group by 1) as won_amount_opport_by_OppName\n    on users.user_id= won_amount_opport_by_OppName.opportunity_owner_id\n\n    LEFT JOIN (select opportunity_owner_id, MAX(Amount) as max_amount, MIN(Amount) as min_amount, SUM(Amount) as total_amount from opport\n     WHERE opportunity_owner_id is not null \n     group by 1) as opp_amount_agg\n    on users.user_id= opp_amount_agg.opportunity_owner_id\n\n    where users.USERNAME is not null and user_id is not null\n    \n)\nselect distinct *  from account_metric  where OPPORTUNITY_OWNER_ID is not null"}, "error": "Database Error in model inter_sf_opportunity_enhanced (models/intermediate/inter_sf_opportunity_enhanced.sql)\n  001044 (42P13): SQL compilation error: error line 68 at position 34\n  Invalid argument types for function 'AND': (BOOLEAN, TIMESTAMP_LTZ(9))\n  compiled SQL at target/run/FivetranDbt_Transformation/models/intermediate/inter_sf_opportunity_enhanced.sql", "status": "ERROR", "execution_time": 0.9148654937744141, "thread_id": "Thread-1", "timing": [], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_crm_warehouse\") and not enable_finance_warehouse and not enable_marketing_warehouse and not enable_projects_warehouse %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\nwith account_user as (\r\n\r\n    SELECT * FROM {{ ref('inter_sf_account_user') }}\r\n)\r\n\r\nselect * from account_user", "compiled": true, "database": "FIVETRAN_DATABASE", "schema": "dbt_dataflo", "fqn": ["FivetranDbt_Transformation", "marts", "w_crm", "dim_opportunity_account"], "unique_id": "model.FivetranDbt_Transformation.dim_opportunity_account", "package_name": "FivetranDbt_Transformation", "root_path": "/usr/src/develop/user-10139/environment-12915/repository-10542", "path": "marts/w_crm/dim_opportunity_account.sql", "original_file_path": "models/marts/w_crm/dim_opportunity_account.sql", "name": "dim_opportunity_account", "resource_type": "model", "alias": "dim_opportunity_account", "checksum": {"name": "sha256", "checksum": "95b5142213d82a633ee5ec1118f0a39211ac55e2b81181f4ec13274e8dc27159"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["inter_sf_account_user"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.FivetranDbt_Transformation.inter_sf_account_user"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/FivetranDbt_Transformation/models/marts/w_crm/dim_opportunity_account.sql", "deferred": false, "compiled_sql": "\n\nwith account_user as (\n\n    SELECT * FROM FIVETRAN_DATABASE.dbt_dataflo_staging.inter_sf_account_user\n)\n\nselect * from account_user", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith account_user as (\n\n    SELECT * FROM FIVETRAN_DATABASE.dbt_dataflo_staging.inter_sf_account_user\n)\n\nselect * from account_user"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.5612189769744873, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T11:16:08.392540Z", "completed_at": "2020-11-06T11:16:08.418940Z"}, {"name": "execute", "started_at": "2020-11-06T11:16:08.419327Z", "completed_at": "2020-11-06T11:16:09.885671Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_crm_warehouse\") and not enable_finance_warehouse and not enable_marketing_warehouse and not enable_projects_warehouse %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\nWITH opportunity_lead as (\r\n\r\n select * from  {{ ref('inter_sf_opportunity_leads') }}\r\n)    \r\nselect * from opportunity_lead", "compiled": true, "database": "FIVETRAN_DATABASE", "schema": "dbt_dataflo", "fqn": ["FivetranDbt_Transformation", "marts", "w_crm", "dim_sf_opportunity"], "unique_id": "model.FivetranDbt_Transformation.dim_sf_opportunity", "package_name": "FivetranDbt_Transformation", "root_path": "/usr/src/develop/user-10139/environment-12915/repository-10542", "path": "marts/w_crm/dim_sf_opportunity.sql", "original_file_path": "models/marts/w_crm/dim_sf_opportunity.sql", "name": "dim_sf_opportunity", "resource_type": "model", "alias": "dim_sf_opportunity", "checksum": {"name": "sha256", "checksum": "2c385e700b76d5cbae5b2caafce371db51ec17e9d0162e92adb45275610912ea"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["inter_sf_opportunity_leads"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.FivetranDbt_Transformation.inter_sf_opportunity_leads"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/FivetranDbt_Transformation/models/marts/w_crm/dim_sf_opportunity.sql", "deferred": false, "compiled_sql": "\n\nWITH opportunity_lead as (\n\n select * from  FIVETRAN_DATABASE.dbt_dataflo_staging.inter_sf_opportunity_leads\n)    \nselect * from opportunity_lead", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nWITH opportunity_lead as (\n\n select * from  FIVETRAN_DATABASE.dbt_dataflo_staging.inter_sf_opportunity_leads\n)    \nselect * from opportunity_lead"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.6526036262512207, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T11:16:09.958613Z", "completed_at": "2020-11-06T11:16:09.990500Z"}, {"name": "execute", "started_at": "2020-11-06T11:16:09.990928Z", "completed_at": "2020-11-06T11:16:11.540862Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select * from {{ ref('inter_detail_ga') }}", "compiled": true, "database": "FIVETRAN_DATABASE", "schema": "dbt_dataflo", "fqn": ["FivetranDbt_Transformation", "marts", "w_marketing", "ga_detail_fact"], "unique_id": "model.FivetranDbt_Transformation.ga_detail_fact", "package_name": "FivetranDbt_Transformation", "root_path": "/usr/src/develop/user-10139/environment-12915/repository-10542", "path": "marts/w_marketing/ga_detail_fact.sql", "original_file_path": "models/marts/w_marketing/ga_detail_fact.sql", "name": "ga_detail_fact", "resource_type": "model", "alias": "ga_detail_fact", "checksum": {"name": "sha256", "checksum": "30cca27787116e7fcef18363034d52820c06f3e7d891924935e7b18fff0e08a8"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["inter_detail_ga"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.FivetranDbt_Transformation.inter_detail_ga"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/FivetranDbt_Transformation/models/marts/w_marketing/ga_detail_fact.sql", "deferred": false, "compiled_sql": "select * from FIVETRAN_DATABASE.dbt_dataflo_staging.inter_detail_ga", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select * from FIVETRAN_DATABASE.dbt_dataflo_staging.inter_detail_ga"}, "error": null, "status": "SUCCESS 1", "execution_time": 2772.2279839515686, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T11:16:11.614405Z", "completed_at": "2020-11-06T11:16:11.639379Z"}, {"name": "execute", "started_at": "2020-11-06T11:16:11.639735Z", "completed_at": "2020-11-06T12:02:23.774022Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_crm_warehouse\") and not enable_finance_warehouse and not enable_marketing_warehouse and not enable_projects_warehouse %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n\r\nselect * from  {{ ref('inter_sf_opportunity_enhanced') }}\r\n\r\n--  LEFT JOIN \r\n--         (select * from opportunity_account_dim ) as account_user\r\n--         on opportunity_fact.OPPORTUNITY_OWNER_ID = account_user.account_owner_id", "database": "FIVETRAN_DATABASE", "schema": "dbt_dataflo", "fqn": ["FivetranDbt_Transformation", "marts", "w_crm", "fact_sf_opportunity"], "unique_id": "model.FivetranDbt_Transformation.fact_sf_opportunity", "package_name": "FivetranDbt_Transformation", "root_path": "/usr/src/develop/user-10139/environment-12915/repository-10542", "path": "marts/w_crm/fact_sf_opportunity.sql", "original_file_path": "models/marts/w_crm/fact_sf_opportunity.sql", "name": "fact_sf_opportunity", "resource_type": "model", "alias": "fact_sf_opportunity", "checksum": {"name": "sha256", "checksum": "049ddabe034ff65b22f11e72a6245a06b23705ee9994e6256351d2ef267120d1"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["inter_sf_opportunity_enhanced"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.FivetranDbt_Transformation.inter_sf_opportunity_enhanced"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "deferred": false}, "error": null, "status": null, "execution_time": 0, "thread_id": null, "timing": [], "fail": null, "warn": null, "skip": true}], "generated_at": "2020-11-06T12:02:24.802281Z", "elapsed_time": 2793.8199529647827}